{"version":3,"sources":["components/Users/Users.module.css","img/user_avatar_placeholder.png","components/Sidebar/Sidebar.module.css","components/Profile/ProfileHeader/ProfileHeader.module.css","components/Profile/PostsTape/Post/Post.module.css","components/MainHeader/MainHeader.module.css","components/Users/Paginator/Paginator.module.css","components/commom/Preloader/Preloader.module.css","components/Sidebar/Friends/Friend.module.css","components/Login/Login.module.css","img/looking_job.svg","img/not_looking_job.svg","img/profile.jpg","components/Profile/PostsTape/PostsTape.module.css","img/main.jpg","components/Dialogs/Dialogs.module.css","components/Sidebar/Friends/Friend.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/commom/Preloader/Preloader.js","components/Profile/ProfileHeader/ProfileHeader.js","components/Profile/PostsTape/Post/Post.js","components/Profile/PostsTape/PostsTape.js","API/API.js","redux/profileReducer.js","components/Profile/PostsTape/PostsTapeContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/dialogsReducer.js","components/Dialogs/UserBlock/UserBlock.js","components/Dialogs/MessageBlock/MessageBlock.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","components/Users/Paginator/Paginator.js","components/Users/Users.js","redux/usersReducer.js","components/Users/UsersContainer.js","components/News/News.js","components/News/NewsContainer.js","components/MainHeader/MainHeader.js","redux/authReducer.js","components/MainHeader/MainHeaderContainer.js","components/Main/Main.js","components/Login/Login.js","components/Music/Music.js","components/Music/MusicContainer.js","components/Settings/Settings.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/reduxStore.js","index.js"],"names":["module","exports","Friend","props","className","s","ava","src","avatarLink","alt","name","friendName","Sidebar","friends","map","friend","key","id","menu","page","to","link","activeClassName","active","sidebar","bold","SidebarContainer","connect","state","dispatch","Preloader","styles","loader","circular","viewBox","path","cx","cy","r","fill","strokeWidth","strokeMiterlimit","ProfileHeader","profile","profileCover","profileSheet","profilePhoto","photos","small","userAvatarPlaceholder","userId","profileStatus","aboutMe","lookingForAJob","jobLooking","looking","notLooking","lookingForAJobDescription","Post","postBlock","likes","post","postText","PostsTape","addPost","onChange","event","changedText","target","value","changePostText","writingPostText","placeholder","autoFocus","onClick","posts","likesCount","instance","axios","baseURL","withCredentials","headers","usersAPI","pageSize","currentPage","get","then","response","data","delete","authAPI","initialState","userProfile","profileReducer","action","type","text","PostsTapeContainer","profilePage","changePostActionCreator","Profile","ProfileContainer","this","match","params","getProfile","React","Component","WithUrlDataContainerComponent","withRouter","authorizedUserId","auth","users","messages","autor","message","writingMessageText","dialogsReducer","newMessage","UserBlock","userBlock","MessageBlock","messageBlock","userName","messageText","Dialogs","dialogs","usersColumn","user","messagesColumn","addMessage","writingText","changeMessage","postField","mes","DialogsContainer","dialogsPage","Paginator","pages","pagesCount","Math","ceil","totalUsersCount","i","push","useState","currentRange","setCurrentRange","leftLimit","rightLimit","pagesPagination","filter","selected","e","getCurrentUsers","ranges","console","log","pagination","paginationNav","Users","userItem","avatar","userPhoto","userInfo","mane","status","friendBlock","followed","isFriend","disabled","followProcessingUsers","some","uid","unfollow","follow","isFetching","toggleIsFetching","toggleIsFollowProcessing","usersReducer","UsersContainer","getUsers","usersPage","resultCode","followAction","unfollowAction","items","setCurrentPage","totalCount","News","isAuth","NewsContainer","MainHeader","mineHeader","wrapper","authBlock","login","authUserAvatar","authUserAvatarPlaceholder","email","authorizedUserAvatar","authReducer","MainHeaderContainer","setAuthMeData","setAuthUserData","setAuthUserAvatar","Main","mainPicture","Login","loginPage","modalWindow","Music","MusicContainer","Settings","SettingsContainer","App","exact","render","Boolean","window","location","hostname","sidebarReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","getState","renderAll","ReactDOM","StrictMode","basename","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.cc5f14f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"Users_userItem__w_zBd\",\"avatar\":\"Users_avatar__1CqdD\",\"userPhoto\":\"Users_userPhoto__QbFi6\",\"userInfo\":\"Users_userInfo__nWu7K\",\"mane\":\"Users_mane__2nM4t\",\"status\":\"Users_status__1vc8V\",\"friendBlock\":\"Users_friendBlock__1LrKI\",\"isFriend\":\"Users_isFriend__2lZGL\",\"preloaderVisible\":\"Users_preloaderVisible__1ogTI\",\"preloaderUnvisible\":\"Users_preloaderUnvisible__s24VE\"};","module.exports = __webpack_public_path__ + \"static/media/user_avatar_placeholder.8d17db1b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2qBGc\",\"active\":\"Sidebar_active__2RE7F\",\"bold\":\"Sidebar_bold__1Fufz\",\"friend\":\"Sidebar_friend__1rhVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCover\":\"ProfileHeader_profileCover__ppy09\",\"profilePhoto\":\"ProfileHeader_profilePhoto__2hv0o\",\"profileStatus\":\"ProfileHeader_profileStatus__1-ISZ\",\"lookingForAJob\":\"ProfileHeader_lookingForAJob__2Os1Y\",\"lookingForAJobDescription\":\"ProfileHeader_lookingForAJobDescription__20x2w\",\"jobLooking\":\"ProfileHeader_jobLooking__3XoIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Post_postBlock__e2YHy\",\"ava\":\"Post_ava__gqrft\",\"likes\":\"Post_likes__3O-6y\",\"post\":\"Post_post__2oinp\",\"postText\":\"Post_postText__o98dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mineHeader\":\"MainHeader_mineHeader__FN-S1\",\"wrapper\":\"MainHeader_wrapper__10pp0\",\"authBlock\":\"MainHeader_authBlock__3MKYN\",\"userName\":\"MainHeader_userName__olMeq\",\"avatar\":\"MainHeader_avatar__17XqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__aJZTH\",\"selected\":\"Paginator_selected__zhO9i\",\"paginationNav\":\"Paginator_paginationNav__1pATz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__34Xgw\",\"circular\":\"Preloader_circular__2wtNH\",\"rotate\":\"Preloader_rotate__3JteC\",\"path\":\"Preloader_path__2VkDZ\",\"dash\":\"Preloader_dash__2ls1X\",\"color\":\"Preloader_color__3OYLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendName\":\"Friend_friendName__2oLor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__3a8_M\",\"modalWindow\":\"Login_modalWindow__uhoiX\"};","module.exports = __webpack_public_path__ + \"static/media/looking_job.0c569380.svg\";","module.exports = __webpack_public_path__ + \"static/media/not_looking_job.d0c709f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.1ea9acb5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"PostsTape_addPost__31cbv\"};","module.exports = __webpack_public_path__ + \"static/media/main.a380a2be.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Xpin\",\"userBlock\":\"Dialogs_userBlock__3ZjkJ\",\"ava\":\"Dialogs_ava__3ZQ4t\",\"active\":\"Dialogs_active__nkuLR\",\"addMessage\":\"Dialogs_addMessage__3-lJG\",\"postField\":\"Dialogs_postField__33IBz\",\"messagesColumn\":\"Dialogs_messagesColumn__290kT\",\"message\":\"Dialogs_message__3lbky\",\"messageBlock\":\"Dialogs_messageBlock__3wHy1\",\"userName\":\"Dialogs_userName__wYCxL\",\"messageText\":\"Dialogs_messageText__3nLSN\"};","import React, { Fragment } from 'react';\r\nimport s from './Friend.module.css';\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <img className={s.ava} src={props.avatarLink} alt={`${props.name}'s avatar`} />\r\n            <span className={s.friendName}>{props.name}</span>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\nimport Friend from './Friends/Friend';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let friends = props.friends.map(friend => {\r\n\r\n        return(\r\n            <div key={friend.id} className={s.friend}><Friend name={friend.name} avatarLink={friend.avatarLink} /></div>\r\n        )\r\n    });\r\n\r\n    let menu = props.menu.map(page => {\r\n        return(\r\n            <li key={page.page}><NavLink to={page.link} activeClassName={s.active}>{page.page}</NavLink></li>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <nav className={s.sidebar}>\r\n            <ul>\r\n                {menu}\r\n                <li className={s.bold}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></li>\r\n            </ul>\r\n\r\n            <div>\r\n                <ul>\r\n                    <li className={s.bold}><NavLink to=\"/friends\" activeClassName={s.active}>My friends</NavLink></li>\r\n                </ul>\r\n                {friends}             \r\n            </div>\r\n        </nav>\r\n    );\r\n    \r\n}\r\n\r\nexport default Sidebar;","import Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n/* const SidebarContainer = (props) => {\r\n    return(\r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n\r\n                let state = store.getState();\r\n\r\n                return <Sidebar friends={state.sidebar.friends} menu={state.sidebar.menu} />\r\n            }}\r\n        </StoreContext.Consumer>\r\n    )\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends,\r\n        menu: state.sidebar.menu\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;","import React from 'react';\nimport styles from './Preloader.module.css';\n\nconst Preloader = (props) => {\n\n    return <div className={styles.loader}>\n        <svg className={styles.circular} viewBox=\"25 25 50 50\">\n            <circle className={styles.path} cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\n        </svg>\n    </div>\n}\n\nexport default Preloader;","import React from 'react';\r\nimport styles from './ProfileHeader.module.css';\r\nimport Preloader from '../../commom/Preloader/Preloader';\r\nimport looking from '../../../img/looking_job.svg';\r\nimport notLooking from '../../../img/not_looking_job.svg';\r\nimport userAvatarPlaceholder from '../../../img/user_avatar_placeholder.png';\r\nimport profileSheet from '../../../img/profile.jpg';\r\n\r\n\r\nconst ProfileHeader = (props) => {\r\n\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return <>\r\n        <div className={styles.profileCover}>\r\n            <img src={profileSheet} alt=\"profile\" />\r\n            <img className={styles.profilePhoto} src={!props.profile.photos.small ? userAvatarPlaceholder : props.profile.photos.small} alt={'user ' + props.profile.userId + ' photo'} />\r\n        </div>\r\n\r\n        <div className={styles.profileStatus}>{props.profile.aboutMe}</div>\r\n        <div className={styles.lookingForAJob}>\r\n            <span>Is looking for a job:</span><img className={styles.jobLooking} src={props.profile.lookingForAJob === true ? looking : notLooking} alt='looking for a job' />\r\n        </div>\r\n        <div className={styles.lookingForAJobDescription}>{props.profile.lookingForAJobDescription}</div>\r\n    </>\r\n}\r\n\r\nexport default ProfileHeader;\r\n\r\n","import React from 'react';\r\nimport s from'./Post.module.css';\r\nimport userAvatarPlaceholder from '../../../../img/user_avatar_placeholder.png';\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className={s.postBlock}>\r\n            <div className={s.ava}>\r\n                <img src={userAvatarPlaceholder} alt=\"user avatar\" />\r\n                <span className={s.likes}>Likes: {props.likes}</span>\r\n            </div>\r\n            <div className={s.post}>\r\n                <p className={s.postText}>{props.post}</p>\r\n            </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './PostsTape.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst PostsTape = (props) => {\r\n    const onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    const changePostText = (event) => {\r\n        let changedText = event.target.value;\r\n        props.changePostText(changedText);\r\n    }    \r\n\r\n    return <>\r\n            <div className={s.addPost}>\r\n                <textarea onChange={changePostText} value={props.writingPostText} placeholder=\" create your new post\" autoFocus />\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div>\r\n\r\n            {props.posts.map(post => {\r\n                return <Post key={post.id} post={post.postText} likes={post.likesCount} />\r\n            })}\r\n    </>  \r\n}\r\n\r\nexport default PostsTape;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '69ce5c37-4614-409a-848d-cee47ea3fbcd'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    \r\n    /* UserContainer - to get part of users for start/current page */\r\n    getUsers(pageSize = 10, currentPage = 1) {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}`)\r\n        .then(response => response.data)\r\n    },\r\n\r\n    /* MainHeaderContainer, ProfileContainer - to get certain user profile */\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n        /* .then(response => response.data) */\r\n    },\r\n\r\n    /* Users - to follow certain user */\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    /* Users - to follow certain user */\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    /* MainHeaderContainer - to get and set authorized user data */\r\n    getAuthMeData() {\r\n        return instance.get('auth/me')\r\n    }\r\n    \r\n}\r\n","import { usersAPI } from \"../API/API\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst CHANGE_POST = 'CHANGE-POST';\r\nconst GET_USER_PROFILE = 'GET-USER-PROFILE';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, postText: 'Hi there!', likesCount: 10},\r\n    {id: 2, postText: 'It\\'s my new post.', likesCount: 25765},\r\n  ],\r\n  writingPostText: '',\r\n  userProfile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_POST: \r\n      let text = state.writingPostText;\r\n\r\n        return {\r\n          ...state,\r\n          posts: [ ...state.posts, {id: 3, postText: text, likesCount: 0} ],\r\n          writingPostText: ''\r\n        }\r\n      \r\n      case CHANGE_POST:      \r\n        return {\r\n          ...state, writingPostText: action.text\r\n        }\r\n\r\n      case GET_USER_PROFILE:\r\n        return {\r\n          ...state, userProfile: action.userProfile\r\n        }\r\n      \r\n      default: \r\n        return state;\r\n      \r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const changePostActionCreator = (text) => ({ type: CHANGE_POST, text });\r\nexport const getUserProfile = (userProfile) => ({ type: GET_USER_PROFILE, userProfile });\r\n\r\n/* thunk */\r\n\r\nexport const getProfile = (userId) => {\r\n  return (dispatch) => {\r\n    usersAPI.getProfile(userId) \r\n    .then(response => dispatch(getUserProfile(response.data)));\r\n  }\r\n}\r\n\r\nexport default profileReducer;","import PostsTape from './PostsTape';\r\nimport { addPostActionCreator, changePostActionCreator } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        writingPostText: state.profilePage.writingPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        changePostText: (text) => {\r\n            dispatch(changePostActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsTapeContainer = connect(mapStateToProps, mapDispatchToProps)(PostsTape);\r\n\r\nexport default PostsTapeContainer;","import React from 'react';\r\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\r\nimport PostsTapeContainer from './PostsTape/PostsTapeContainer';\r\n\r\nconst Profile = (props) => {\r\n    \r\n        return <>\r\n                <header>\r\n                    <ProfileHeader profile={props.profile} />\r\n                </header>\r\n                <main>\r\n                    <PostsTapeContainer />  \r\n                </main>             \r\n            </>  \r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { /* getUserProfile,  */getProfile } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n     \r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            /* userId = this.props.authorizedUserId; */\r\n            userId = 9095;\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.userProfile} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    authorizedUserId: state.auth.userId\r\n});\r\n\r\nconst WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\nexport default connect(mapStateToProps, {/* getUserProfile,  */getProfile})(WithUrlDataContainerComponent);","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst CHANGE_MESSAGE = 'CHANGE-MESSAGE';\r\n\r\nlet initialState = {\r\n  users: [\r\n    {id: 1, name: 'Tom'},\r\n    {id: 2, name: 'Helen'},\r\n    {id: 3, name: 'Sarah'},\r\n    {id: 4, name: 'George'},\r\n  ],\r\n  messages: [\r\n    {id: 1, autor: 'Tom', message: 'Hi! Are you busy today?'},\r\n    {id: 2, autor: 'Me', message: 'Hi! I\\'ve free time in afternoon. What\\'s the matter?'},\r\n    {id: 3, autor: 'Tom', message: 'I want to talk with you.'},\r\n    {id: 4, autor: 'Me', message: 'OK, let\\'s meet at 6 o\\'clock?'},\r\n  ],\r\n  writingMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_MESSAGE: \r\n\r\n        let newMessage = state.writingMessageText;\r\n\r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, {id: 5, autor: 'Me', message: newMessage},],\r\n          writingMessageText: ''\r\n        }\r\n\r\n      case CHANGE_MESSAGE: \r\n\r\n        return {\r\n          ...state,\r\n          writingMessageText: action.text\r\n        }\r\n             \r\n      default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessage = () => {\r\n    return {\r\n      type: ADD_MESSAGE\r\n    }\r\n  }\r\n  \r\nexport const changeMessage = (text) => {\r\n    return {\r\n        type: CHANGE_MESSAGE,\r\n        text: text\r\n      }\r\n    }\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserBlock = (props) =>{\r\n\r\n    return(\r\n        <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>\r\n            <div className={s.userBlock}>\r\n                <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n                {props.name}\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default UserBlock;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst MessageBlock = (props) => {\r\n\r\n    return(\r\n        <div className={s.message}>\r\n            <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n            <div className={s.messageBlock}>\r\n                <h5 className={s.userName}>{props.autor}</h5>\r\n                <p className={s.messageText}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBlock;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport UserBlock from './UserBlock/UserBlock';\r\nimport MessageBlock from './MessageBlock/MessageBlock';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Dialogs = (props) => { \r\n\r\n    const onAddMessage = () => {        \r\n        props.addMessage();\r\n    }\r\n\r\n    const onChangeMessage = (event) => {\r\n        let writingText = event.target.value;\r\n        props.changeMessage(writingText);\r\n    }\r\n\r\n    return <>\r\n{/*         {!props.isAuth\r\n            ? <Redirect to='/login' />\r\n            \r\n            : */} <div className={s.dialogs}>\r\n                <div className={s.usersColumn}>\r\n\r\n                    {props.users.map(user => <UserBlock key={user.id} id={user.id} name={user.name} />)}\r\n\r\n                </div>\r\n                <div className={s.messagesColumn}>\r\n                    <div className={s.addMessage}>\r\n                        <textarea onChange={onChangeMessage} className={s.postField} value={props.writingMessageText} autoFocus placeholder=\" write your message here\" />\r\n                        <button onClick={onAddMessage}>Send message</button>\r\n                    </div>\r\n\r\n                    {props.messages.map(mes => <MessageBlock key={mes.id} autor={mes.autor} message={mes.message} />)}\r\n\r\n                </div>\r\n            </div>{/* } */}\r\n\r\n   </>\r\n}\r\n\r\nexport default Dialogs;","import { addMessage, changeMessage } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.dialogsPage.users,\r\n        messages: state.dialogsPage.messages,\r\n        writingMessageText: state.dialogsPage.writingMessageText,\r\n        /* isAuth: state.auth.isAuth */\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, {addMessage, changeMessage})(Dialogs);\r\n\r\nexport default DialogsContainer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\n    \r\nconst Paginator = (props) => {\r\n\r\n    let pages = [];\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    for(let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    /* --- */\r\n    let pagesRange = 10;\r\n    \r\n    //let currentRange = Math.ceil(props.currentPage / pagesRange);\r\n    const [currentRange, setCurrentRange] = useState(1);\r\n    let leftLimit = (currentRange - 1) * pagesRange + 1; //left limit of range\r\n    let rightLimit = currentRange * pagesRange; //right limit of range\r\n    /* --- */\r\n\r\n    let pagesPagination = pages\r\n        .filter(page => page >= leftLimit && page <= rightLimit)\r\n        .map(page => {\r\n            return <span key={page} \r\n            className={page === props.currentPage ? styles.selected : ''} \r\n            /* similar: className={page === props.currentPage && styles.selected}  */\r\n            onClick={ (e) => props.getCurrentUsers(page)}>{page}</span>\r\n    });\r\n\r\n    let ranges = Math.ceil(pagesCount / pagesRange);\r\n    console.log(ranges);\r\n\r\n    return <div className={styles.pagination}>\r\n            {currentRange > 1 && <button className={styles.paginationNav} onClick={ () => setCurrentRange(currentRange - 1)}>&#60;&#60; PREW</button>}\r\n            {pagesPagination}\r\n            {currentRange < ranges && <button className={styles.paginationNav} onClick={ () => setCurrentRange(currentRange + 1)}>NEXT &gt;&gt;</button>}\r\n        </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userAvatarPlaceholder from '../../img/user_avatar_placeholder.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from './Paginator/Paginator';\r\n//import { setCurrentPage } from '../../redux/usersReducer';\r\n\r\nconst Users = (props) => {\r\n\r\n    let users = props.users.map(user => {\r\n\r\n        return (\r\n            <div key={user.id} className={styles.userItem}>\r\n                <NavLink to={\"profile/\" + user.id}>\r\n                    <div className={styles.avatar}>\r\n                        <img className={styles.userPhoto} alt=\"user-avatar\" src={user.photos.small !== null ? user.photos.small : userAvatarPlaceholder} />\r\n                    </div>\r\n                </NavLink>\r\n                <div className={styles.userInfo}>\r\n                    <div className={styles.mane}>{user.name}</div>\r\n                    <div className={styles.status}>{user.status}</div>                       \r\n                </div>\r\n                <div className={styles.friendBlock}>\r\n\r\n                    {user.followed ? \r\n                    <div className={styles.isFriend}>\r\n                        <span>friend</span>\r\n                        <button disabled={props.followProcessingUsers.some(uid => uid === user.id)} onClick={ () => {\r\n                            props.unfollow(user.id);\r\n                            /* props.toggleIsFollowProcessing(true, user.id);\r\n                            props.toggleIsFetching(true);\r\n\r\n                            usersAPI.unfollow(user.id)\r\n                            .then(response => {\r\n                                if(response.data.resultCode === 0) {\r\n                                    props.unfollow(user.id);\r\n                                }\r\n                                props.toggleIsFollowProcessing(false, user.id);\r\n                                props.toggleIsFetching(false);\r\n                            });  */\r\n\r\n                        } }>Unfollow</button></div> : \r\n\r\n                        <button className={styles.isFriend} \r\n                        disabled={props.followProcessingUsers.some(uid => uid === user.id)} onClick={ () => {\r\n                            props.follow(user.id);\r\n/*                             props.toggleIsFollowProcessing(true, user.id);\r\n                            props.toggleIsFetching(true);\r\n\r\n                            usersAPI.follow(user.id)\r\n                            .then(response => {\r\n                                if(response.data.resultCode === 0) {\r\n                                    props.follow(user.id);\r\n                                }\r\n                                props.toggleIsFollowProcessing(false, user.id);\r\n                                props.toggleIsFetching(false);\r\n                            });  */\r\n                            \r\n                        } }>Follow</button>}\r\n                </div>                   \r\n            </div>\r\n        )\r\n    });\r\n\r\n    return <>\r\n        <Paginator \r\n            totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            currentPage={props.currentPage}\r\n            getCurrentUsers={props.getCurrentUsers} />\r\n        <div className={styles.users}>{users}</div>\r\n    </>\r\n}\r\n\r\nexport default Users;","import { usersAPI } from \"../API/API\";\r\n\r\nconst LOAD_USERS = 'LOAD-USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOW_PROCESSING = 'TOGGLE-IS-FOLLOW-PROCESSING';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followProcessingUsers: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USERS:\r\n            return {\r\n                ...state, users: [ ...action.users]\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })             \r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOW_PROCESSING:\r\n            return {\r\n                ...state, \r\n                followProcessingUsers: action.isFetching \r\n                ? [...state.followProcessingUsers, action.userId] \r\n                : [state.followProcessingUsers.filter(uid => uid !== action.userId)] \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loadUsers = (users) => ({type: LOAD_USERS, users});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const followAction = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAction = (userId) => ({type: UNFOLLOW, userId});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching}); \r\nexport const toggleIsFollowProcessing = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOW_PROCESSING, isFetching, userId});\r\n\r\n/* thunks */\r\n\r\nexport const getUsers = (pageSize, currentPage) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(pageSize, currentPage)\r\n        .then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(loadUsers(data.items)); \r\n            dispatch(setCurrentPage(currentPage));  \r\n            dispatch(setTotalUsersCount(data.totalCount)); \r\n        });  \r\n    }\r\n} \r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowProcessing(true, userId));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n    usersAPI.follow(userId)\r\n    .then(response => {\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(followAction(userId));\r\n        }\r\n        dispatch(toggleIsFollowProcessing(false, userId));\r\n        dispatch(toggleIsFetching(false));\r\n    }); \r\n    } \r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowProcessing(true, userId));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n    usersAPI.unfollow(userId)\r\n    .then(response => {\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(unfollowAction(userId));\r\n        }\r\n        dispatch(toggleIsFollowProcessing(false, userId));\r\n        dispatch(toggleIsFetching(false));\r\n    }); \r\n    } \r\n}\r\n\r\nexport default usersReducer;","import React from 'react'; \r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../commom/Preloader/Preloader';\r\nimport { /* loadUsers, setTotalUsersCount, */ /* setCurrentPage, */ follow, unfollow, /* toggleIsFetching, toggleIsFollowProcessing, */ getUsers } from '../../redux/usersReducer';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.pageSize, this.props.currentPage);    \r\n    }\r\n\r\n    getCurrentUsers = (currentPage) => {\r\n        this.props.getUsers(this.props.pageSize, currentPage);    \r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            \r\n            <Users \r\n                users={this.props.users} \r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                isFetching={this.props.isFetching}\r\n                getCurrentUsers={this.getCurrentUsers}\r\n/*                 toggleIsFetching={this.props.toggleIsFetching}\r\n                toggleIsFollowProcessing={this.props.toggleIsFollowProcessing} */\r\n                followProcessingUsers={this.props.followProcessingUsers} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followProcessingUsers: state.usersPage.followProcessingUsers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, \r\n    {/* loadUsers, setTotalUsersCount, */ /* setCurrentPage, */ follow, unfollow, /* toggleIsFetching, toggleIsFollowProcessing, */ getUsers})(UsersContainer);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n//import s from './News.module.css';\r\n\r\n\r\nconst News = (props) => {\r\n    return <>\r\n        {!props.isAuth\r\n            ? <Redirect to='/login' />\r\n            : <div>News</div>}\r\n    </>         \r\n}\r\n\r\nexport default News;","import { connect } from 'react-redux';\r\nimport News from './News';\r\n\r\n\r\nconst mapDispatchToProps = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nconst NewsContainer = connect(mapDispatchToProps, {})(News);\r\n\r\nexport default NewsContainer;","import React from 'react';\r\nimport styles from './MainHeader.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport authUserAvatarPlaceholder from '../../img/user_avatar_placeholder.png';\r\n\r\n\r\nconst MainHeader = (props) => {\r\n\r\n    return <div className={styles.mineHeader}>\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.authBlock}>\r\n                <span className={styles.userName}>{props.isAuth ? props.login : <NavLink to=\"/login\">Login</NavLink>}</span>\r\n                <img className={styles.avatar} src={props.authUserAvatar ? props.authUserAvatar : authUserAvatarPlaceholder} alt=\"autorized user avatar\" />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MainHeader;","import { usersAPI, authAPI } from \"../API/API\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET-AUTH-USER-DATA';\r\nconst SET_AUTH_USER_AVATAR = 'SET-AUTH-USER-AVATAR';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authorizedUserAvatar: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state, \r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        case SET_AUTH_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                authUserAvatar: action.authUserAvatar\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email) => ({type: SET_AUTH_USER_DATA, data: {userId, login, email}});\r\nexport const setAuthUserAvatar = (authUserAvatar) => ({type: SET_AUTH_USER_AVATAR, authUserAvatar});\r\n\r\n/* thunks */\r\n\r\nexport const setAuthMeData = () => {\r\n    return (dispatch) => {\r\n        authAPI.getAuthMeData()\r\n        .then(response => {\r\n            if(response.data.resultCode === 0) {  \r\n                let {id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, login, email));\r\n            }          \r\n        });\r\n    }\r\n}\r\n\r\nexport const getProfile = (id) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(id)\r\n        .then(response => {\r\n            let authUserAvatar = response.data.photos.small;\r\n            dispatch(setAuthUserAvatar(authUserAvatar));\r\n        });\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport MainHeader from './MainHeader';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthMeData, getProfile } from '../../redux/authReducer';\r\n\r\n\r\nclass MainHeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.setAuthMeData();\r\n\r\n        this.props.getProfile(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        return <MainHeader {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n    authUserAvatar: state.auth.authUserAvatar\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAuthMeData, getProfile})(MainHeaderContainer);","import React from 'react';\r\nimport mainPicture from '../../img/main.jpg';\r\n\r\nconst Main = () => {\r\n\r\n    return <>\r\n            <img src={mainPicture} alt=\"main\" />\r\n        </>\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport styles from './Login.module.css';\r\n\r\nconst Login = (props) => {\r\n\r\n        return <div className={styles.loginPage}>\r\n            <div className={styles.modalWindow}>\r\n              <h1>Login</h1>\r\n            </div>          \r\n          </div>\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n//import s from './Music.module.css';\r\n\r\n\r\nconst Music = (props) => {\r\ndebugger;\r\n    return <>\r\n        {!props.isAuth \r\n            ? <Redirect to='/login' /> \r\n            :  <div>Music</div>}       \r\n    </>\r\n        \r\n}\r\n\r\nexport default Music;","import { connect } from 'react-redux';\r\nimport Music from './Music';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\ndebugger;\r\n    return {\r\n        isAuth: state.auth.isAuth \r\n    }\r\n}\r\n\r\nconst MusicContainer = connect(mapStateToProps, null)(Music);\r\n\r\nexport default MusicContainer;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Settings = (props) => {\r\n\r\n    return <>\r\n        {!props.isAuth\r\n            ? <Redirect to='/login' />\r\n            : <div>Settings</div>}\r\n    </>        \r\n}\r\n\r\nexport default Settings;","import { connect } from 'react-redux';\r\nimport Settings from './Settings';\r\n\r\n\r\nconst mapDispatchToProps = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nconst SettingsContainer = connect(mapDispatchToProps, {})(Settings);\r\n\r\nexport default SettingsContainer;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport SidebarContainer from './components/Sidebar/SidebarContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport NewsContainer from './components/News/NewsContainer';\r\nimport MainHeaderContainer from './components/MainHeader/MainHeaderContainer';\r\nimport Main from './components/Main/Main';\r\nimport Login from './components/Login/Login';\r\nimport MusicContainer from './components/Music/MusicContainer';\r\nimport SettingsContainer from './components/Settings/SettingsContainer';\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className='app'>\r\n        <MainHeaderContainer />\r\n      <div className='wrapper'>            \r\n          <SidebarContainer />       \r\n        <div className='contentBlock'>\r\n\r\n          <Route exact path='/' render={ () => <Main />} />\r\n\r\n          <Route path='/profile/:userId?' render={ () => <ProfileContainer />} />\r\n          <Route path=\"/users\" render={ () => <UsersContainer />} />\r\n \r\n          <Route exact path='/dialogs' render={ () => <DialogsContainer />} />\r\n\r\n          <Route path='/news' render={ () => <NewsContainer />} />\r\n          <Route path='/music' render={ () => <MusicContainer />} />\r\n          <Route path='/settings' render={ () => <SettingsContainer />} />\r\n          <Route path='/login' render={ () => <Login /> } />\r\n\r\n        </div> \r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'James', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 2, name: 'Kirk', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 3, name: 'Lars', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 4, name: 'Robert', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n      ],\r\n      menu: [\r\n        {link: '/profile', page: 'Profile'},       \r\n        {link: '/dialogs', page: 'Dialogs'},\r\n        {link: '/users', page: 'Users'},\r\n        {link: '/news', page: 'News'},\r\n        {link: '/music', page: 'Music'},\r\n      ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer'\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.state = store.getState();\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nconst renderAll = (state) => {\r\n\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <BrowserRouter basename=\"/soc-net\">\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        </BrowserRouter>\r\n      </React.StrictMode>,\r\n      document.getElementById('root')\r\n    );\r\n  }\r\n\r\n\r\nrenderAll(store.getState()); //first rendering\r\n//and now we need state and we are getting it by\r\n//calling getState()\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  renderAll(state);\r\n});\r\n//subscribe(renderAll); //\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}