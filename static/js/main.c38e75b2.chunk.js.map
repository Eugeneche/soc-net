{"version":3,"sources":["components/Users/Users.module.css","components/Sidebar/Sidebar.module.css","components/Profile/PostsTape/Post/Post.module.css","components/Sidebar/Friends/Friend.module.css","components/Profile/PostsTape/PostsTape.module.css","components/Dialogs/Dialogs.module.css","components/MainHeader/MainHeader.module.css","img/user_avatar.png","components/MainHeader/MainHeader.js","components/Sidebar/Friends/Friend.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/Profile/Header/Header.js","components/Profile/PostsTape/Post/Post.js","components/Profile/PostsTape/PostsTape.js","redux/profileReducer.js","components/Profile/PostsTape/PostsTapeContainer.js","components/Profile/Profile.js","redux/dialogsReducer.js","components/Dialogs/UserBlock/UserBlock.js","components/Dialogs/MessageBlock/MessageBlock.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","components/Users/Users.js","redux/usersReducer.js","components/Users/UsersContainer.js","components/News/News.js","components/Settings/Settings.js","components/Music/Music.js","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/reduxStore.js","index.js"],"names":["module","exports","MainHeader","className","s","mineHeader","React","Component","Friend","props","ava","src","avatarLink","alt","name","friendName","Sidebar","friends","map","friend","key","id","menu","page","to","link","activeClassName","active","sidebar","bold","SidebarContainer","connect","state","dispatch","Header","Post","postBlock","likes","post","postText","PostsTape","posts","addPost","onChange","event","changedText","target","value","changePostText","writingPostText","placeholder","onClick","likesCount","initialState","profileReducer","action","type","text","PostsTapeContainer","profilePage","changePostActionCreator","Profile","users","messages","autor","message","writingMessageText","dialogsReducer","newMessage","UserBlock","userBlock","MessageBlock","messageBlock","userName","messageText","Dialogs","dialogs","usersColumn","user","messagesColumn","addMessage","writingText","changeMessage","postField","mes","DialogsContainer","dialogsPage","changeMessageActionCreator","Users","axios","then","response","loadUsers","data","items","this","styles","userItem","avatar","userPhoto","photos","small","userAvatar","userInfo","mane","status","friendBlock","followed","isFriend","unfollow","follow","usersReducer","userId","mapDispatchToProps","UsersContainer","usersPage","News","Settings","Music","App","exact","path","render","Boolean","window","location","hostname","match","sidebarReducer","reducers","combineReducers","store","createStore","renderAll","ReactDOM","StrictMode","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c38e75b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"Users_userItem__w_zBd\",\"avatar\":\"Users_avatar__1CqdD\",\"userPhoto\":\"Users_userPhoto__QbFi6\",\"userInfo\":\"Users_userInfo__nWu7K\",\"mane\":\"Users_mane__2nM4t\",\"status\":\"Users_status__1vc8V\",\"friendBlock\":\"Users_friendBlock__1LrKI\",\"isFriend\":\"Users_isFriend__2lZGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2qBGc\",\"active\":\"Sidebar_active__2RE7F\",\"bold\":\"Sidebar_bold__1Fufz\",\"friend\":\"Sidebar_friend__1rhVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Post_postBlock__e2YHy\",\"ava\":\"Post_ava__gqrft\",\"likes\":\"Post_likes__3O-6y\",\"post\":\"Post_post__2oinp\",\"postText\":\"Post_postText__o98dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendName\":\"Friend_friendName__2oLor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"PostsTape_addPost__31cbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Xpin\",\"userBlock\":\"Dialogs_userBlock__3ZjkJ\",\"ava\":\"Dialogs_ava__3ZQ4t\",\"active\":\"Dialogs_active__nkuLR\",\"addMessage\":\"Dialogs_addMessage__3-lJG\",\"postField\":\"Dialogs_postField__33IBz\",\"messagesColumn\":\"Dialogs_messagesColumn__290kT\",\"message\":\"Dialogs_message__3lbky\",\"messageBlock\":\"Dialogs_messageBlock__3wHy1\",\"userName\":\"Dialogs_userName__wYCxL\",\"messageText\":\"Dialogs_messageText__3nLSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mineHeader\":\"MainHeader_mineHeader__FN-S1\"};","module.exports = __webpack_public_path__ + \"static/media/user_avatar.8d17db1b.png\";","import React from 'react';\r\nimport s from './MainHeader.module.css';\r\n\r\n\r\nclass MainHeader extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className={s.mineHeader}>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainHeader;","import React, { Fragment } from 'react';\r\nimport s from './Friend.module.css';\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <img className={s.ava} src={props.avatarLink} alt={`${props.name}'s avatar`} />\r\n            <span className={s.friendName}>{props.name}</span>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\nimport Friend from './Friends/Friend';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let friends = props.friends.map(friend => {\r\n\r\n        return(\r\n            <div key={friend.id} className={s.friend}><Friend name={friend.name} avatarLink={friend.avatarLink} /></div>\r\n        )\r\n    });\r\n\r\n    let menu = props.menu.map(page => {\r\n        return(\r\n            <li key={page.page}><NavLink to={page.link} activeClassName={s.active}>{page.page}</NavLink></li>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <nav className={s.sidebar}>\r\n            <ul>\r\n                {menu}\r\n                <li className={s.bold}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></li>\r\n            </ul>\r\n\r\n            <div>\r\n                <ul>\r\n                    <li className={s.bold}><NavLink to=\"/friends\" activeClassName={s.active}>My friends</NavLink></li>\r\n                </ul>\r\n                {friends}             \r\n            </div>\r\n        </nav>\r\n    );\r\n    \r\n}\r\n\r\nexport default Sidebar;","import Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n/* const SidebarContainer = (props) => {\r\n    return(\r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n\r\n                let state = store.getState();\r\n\r\n                return <Sidebar friends={state.sidebar.friends} menu={state.sidebar.menu} />\r\n            }}\r\n        </StoreContext.Consumer>\r\n    )\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends,\r\n        menu: state.sidebar.menu\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;","import React from 'react';\r\nimport './Header.css';\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"header\">\r\n                <img src=\"https://img.turne.com.ua/static/countries/c42/small/42_637145319768924795.jpg\" alt=\"czech\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport s from'./Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return(\r\n        <div className={s.postBlock}>\r\n            <div className={s.ava}>\r\n                <img src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"user avatar\" />\r\n                <span className={s.likes}>Likes: {props.likes}</span>\r\n            </div>\r\n            <div className={s.post}>\r\n                <p className={s.postText}>{props.post}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './PostsTape.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst PostsTape = (props) => {\r\n    const onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    const changePostText = (event) => {\r\n        let changedText = event.target.value;\r\n        props.changePostText(changedText);\r\n    }    \r\n\r\n    return(\r\n        <div className={s.posts}>\r\n            <div className={s.addPost}>\r\n                <textarea onChange={changePostText} value={props.writingPostText} placeholder=\" create your new post\" />\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div>\r\n\r\n            {props.posts.map(post => {\r\n                return(\r\n                    <Post key={post.id} post={post.postText} likes={post.likesCount} />\r\n                );\r\n            })}\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PostsTape;","const ADD_POST = 'ADD-POST';\r\nconst CHANGE_POST = 'CHANGE-POST';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, postText: 'Hi there!', likesCount: 10},\r\n    {id: 2, postText: 'It\\'s my new post.', likesCount: 25765},\r\n  ],\r\n  writingPostText: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_POST: \r\n      let text = state.writingPostText;\r\n\r\n      return {\r\n        ...state,\r\n        posts: [ ...state.posts, {id: 5, postText: text, likesCount: 0} ],\r\n        writingPostText: ''\r\n      };\r\n      \r\n      case CHANGE_POST: \r\n      \r\n        return {\r\n          ...state,\r\n          writingPostText: action.text\r\n        }\r\n      \r\n      default: \r\n        return state;\r\n      \r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n      type: ADD_POST\r\n    }\r\n  }\r\n  \r\n  export const changePostActionCreator = (text) => {\r\n    return {\r\n      type: CHANGE_POST,\r\n      text: text\r\n    }\r\n  }\r\n\r\n  export default profileReducer;","import PostsTape from './PostsTape';\r\nimport { addPostActionCreator, changePostActionCreator } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\n/* const PostsTapeContainer = (props) => {\r\n   \r\n    return(\r\n            <StoreContext.Consumer>\r\n                { (store) => {\r\n                    let state = store.getState();\r\n\r\n                    let addPost = () => {\r\n                        store.dispatch(addPostActionCreator());\r\n                    }\r\n                \r\n                    const changePostText = (text) => {\r\n                        store.dispatch(changePostActionCreator(text));\r\n                    }\r\n\r\n                    return(\r\n                        <PostsTape addPost={addPost} changePostText={changePostText} posts={state.profilePage.posts} writingPostText={state.profilePage.writingPostText} />\r\n                        )\r\n                    }\r\n                }\r\n            </StoreContext.Consumer>\r\n        )   \r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        writingPostText: state.profilePage.writingPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        changePostText: (text) => {\r\n            dispatch(changePostActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsTapeContainer = connect(mapStateToProps, mapDispatchToProps)(PostsTape);\r\n\r\nexport default PostsTapeContainer;","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport PostsTapeContainer from './PostsTape/PostsTapeContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n   \r\n\r\n        return(\r\n            <div>\r\n                <header>\r\n                    <Header />\r\n                </header>\r\n                <main>\r\n                    <PostsTapeContainer />  \r\n                </main>             \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Profile;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst CHANGE_MESSAGE = 'CHANGE-MESSAGE';\r\n\r\nlet initialState = {\r\n  users: [\r\n    {id: 1, name: 'Tom'},\r\n    {id: 2, name: 'Helen'},\r\n    {id: 3, name: 'Sarah'},\r\n    {id: 4, name: 'George'},\r\n  ],\r\n  messages: [\r\n    {id: 1, autor: 'Tom', message: 'Hi! Are you busy today?'},\r\n    {id: 2, autor: 'Me', message: 'Hi! I\\'ve free time in afternoon. What\\'s the matter?'},\r\n    {id: 3, autor: 'Tom', message: 'I want to talk with you.'},\r\n    {id: 4, autor: 'Me', message: 'OK, let\\'s meet at 6 o\\'clock?'},\r\n  ],\r\n  writingMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_MESSAGE: \r\n\r\n        let newMessage = state.writingMessageText;\r\n\r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, {id: 5, autor: 'Me', message: newMessage},],\r\n          writingMessageText: ''\r\n        }\r\n\r\n      case CHANGE_MESSAGE: \r\n\r\n        return {\r\n          ...state,\r\n          writingMessageText: action.text\r\n        }\r\n             \r\n      default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessageActionCreator = () => {\r\n    return {\r\n      type: ADD_MESSAGE\r\n    }\r\n  }\r\n  \r\nexport const changeMessageActionCreator = (text) => {\r\n    return {\r\n        type: CHANGE_MESSAGE,\r\n        text: text\r\n      }\r\n    }\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserBlock = (props) =>{\r\n\r\n    return(\r\n        <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>\r\n            <div className={s.userBlock}>\r\n                <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n                {props.name}\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default UserBlock;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst MessageBlock = (props) => {\r\n\r\n    return(\r\n        <div className={s.message}>\r\n            <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n            <div className={s.messageBlock}>\r\n                <h5 className={s.userName}>{props.autor}</h5>\r\n                <p className={s.messageText}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBlock;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport UserBlock from './UserBlock/UserBlock';\r\nimport MessageBlock from './MessageBlock/MessageBlock';\r\n\r\n\r\nconst Dialogs = (props) => { \r\n\r\n    const onAddMessage = () => {        \r\n        props.addMessage();\r\n    }\r\n\r\n    const onChangeMessage = (event) => {\r\n        let writingText = event.target.value;\r\n        props.changeMessage(writingText);\r\n    }\r\n\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.usersColumn}>\r\n\r\n                {props.users.map(user => <UserBlock key={user.id} id={user.id} name={user.name} />)}\r\n\r\n            </div>\r\n            <div className={s.messagesColumn}>\r\n                <div className={s.addMessage}>\r\n                    <textarea onChange={onChangeMessage} className={s.postField} value={props.writingMessageText} placeholder=\" write your message here\" />\r\n                    <button onClick={onAddMessage}>Send message</button>\r\n                </div>\r\n\r\n                {props.messages.map(mes => <MessageBlock key={mes.id} autor={mes.autor} message={mes.message} />)}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { addMessageActionCreator, changeMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n/* const DialogsContainer = (props) => { \r\n\r\n    return( \r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n                 let state = store.getState();\r\n\r\n                 let addMessage = () => {        \r\n                    store.dispatch(addMessageActionCreator());\r\n                }\r\n            \r\n                const changeMessage = (text) => {\r\n                    store.dispatch(changeMessageActionCreator(text));\r\n                }\r\n\r\n                return(\r\n                    <Dialogs addMessage={addMessage} changeMessage={changeMessage} users={state.dialogsPage.users} messages={state.dialogsPage.messages} writingMessageText={state.dialogsPage.writingMessageText} />\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n        )\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.dialogsPage.users,\r\n        messages: state.dialogsPage.messages,\r\n        writingMessageText: state.dialogsPage.writingMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {        \r\n            dispatch(addMessageActionCreator());\r\n        },\r\n        changeMessage: (text) => {\r\n            dispatch(changeMessageActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport * as axios from 'axios';\r\nimport styles from './Users.module.css';\r\nimport userAvatar from '../../img/user_avatar.png';\r\n\r\nclass Users extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get('https://social-network.samuraijs.com/api/1.0/users')\r\n        .then(response => {\r\n            this.props.loadUsers(response.data.items);    \r\n        });        \r\n    }\r\n\r\n    render() {\r\n\r\n        let users = this.props.users.map(user => {\r\n            return (\r\n                <div key={user.id} className={styles.userItem}>\r\n                    <div className={styles.avatar}>\r\n                        <img className={styles.userPhoto} alt=\"user-avatar\" src={user.photos.small !== null ? user.photos.small : userAvatar} />\r\n                    </div>\r\n                    <div className={styles.userInfo}>\r\n                        <div className={styles.mane}>{user.name}</div>\r\n                        <div className={styles.status}>{user.status}</div>                       \r\n                    </div>\r\n                    <div className={styles.friendBlock}>\r\n                        {user.followed === true ? \r\n                        <div className={styles.isFriend}><span>friend</span><button onClick={ () => {\r\n                        this.props.unfollow(user.id)} }>Unfollow</button></div> : <button className={styles.isFriend} onClick={ () => {this.props.follow(user.id)} }>Follow</button>}\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            )\r\n        });\r\n\r\n        return <div className={styles.users}>\r\n            {users}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Users;","const LOAD_USERS = 'LOAD-USERS';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\n\r\nlet initialState = {\r\n    users: [\r\n/*         {\"name\": \"John\", \"id\": 1, \"photos\": {\"large\": null, \"small\": null,}, \"status\": \"All right!\", \"followed\": false},\r\n        {\"name\": \"Olga\", \"id\": 2, \"photos\": {\"large\": null, \"small\": null,}, \"status\": \"I love rock'n'roll!\", \"followed\": true},\r\n        {\"name\": \"Ann\", \"id\": 3, \"photos\": {\"large\": null, \"small\": null,}, \"status\": \"The World is awesome!\", \"followed\": true}, */\r\n    ]\r\n}\r\n\r\nexport const loadUsers = (users) => ({type: LOAD_USERS, users});\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USERS:\r\n            return {\r\n                ...state, users: [...state.users, ...action.users]\r\n            }\r\n\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })             \r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport { loadUsers, follow, unfollow } from '../../redux/usersReducer';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {loadUsers, follow, unfollow};\r\n\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\r\n\r\nexport default UsersContainer;","import React from 'react';\r\n//import s from './News.module.css';\r\n\r\n\r\nclass News extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>News</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\n\r\nclass Settings extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>Settings</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\n//import s from './Music.module.css';\r\n\r\n\r\nclass Music extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>Music</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport MainHeader from './components/MainHeader/MainHeader';\r\nimport SidebarContainer from './components/Sidebar/SidebarContainer';\r\nimport Profile from './components/Profile/Profile';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport Music from './components/Music/Music';\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className='app'>\r\n        <MainHeader />\r\n      <div className='wrapper'>            \r\n          <SidebarContainer />       \r\n        <div className='contentBlock'>\r\n\r\n          <Route exact path='/' render={ () => <Redirect to='/profile' />} />\r\n\r\n          <Route exact path='/profile' render={ () => <Profile />} />\r\n          <Route exact path=\"/users\" render={ () => <UsersContainer />} />\r\n \r\n          <Route exact path='/dialogs' render={ () => <DialogsContainer />} />\r\n\r\n          <Route path='/news' render={ () => <News />} />\r\n          <Route path='/music' render={ () => <Music />} />\r\n          <Route path='/settings' render={ () => <Settings />} />\r\n\r\n        </div> \r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'James', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 2, name: 'Kirk', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 3, name: 'Lars', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 4, name: 'Robert', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n      ],\r\n      menu: [\r\n        {link: '/profile', page: 'Profile'},       \r\n        {link: '/dialogs', page: 'Dialogs'},\r\n        {link: '/users', page: 'Users'},\r\n        {link: '/news', page: 'News'},\r\n        {link: '/music', page: 'Music'},\r\n      ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer'\r\n\r\nconst reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nconst renderAll = (state) => {\r\n\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <BrowserRouter>\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        </BrowserRouter>\r\n      </React.StrictMode>,\r\n      document.getElementById('root')\r\n    );\r\n  }\r\n\r\n\r\nrenderAll(store.getState()); //first rendering\r\n//and now we need state and we are getting it by\r\n//calling getState()\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  renderAll(state);\r\n});\r\n//subscribe(renderAll); //\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}