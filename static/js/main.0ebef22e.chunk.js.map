{"version":3,"sources":["components/Users/Users.module.css","components/Sidebar/Sidebar.module.css","components/Profile/ProfileHeader/ProfileHeader.module.css","img/user_avatar_placeholder.png","components/Profile/PostsTape/Post/Post.module.css","components/MainHeader/MainHeader.module.css","components/commom/Preloader/Preloader.module.css","components/Sidebar/Friends/Friend.module.css","components/Dialogs/Dialogs.module.css","img/looking_job.svg","img/not_looking_job.svg","img/profile.jpg","components/Profile/PostsTape/PostsTape.module.css","img/main.jpg","components/Sidebar/Friends/Friend.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/commom/Preloader/Preloader.js","API/API.js","components/Profile/ProfileHeader/ProfileHeader.js","components/Profile/PostsTape/Post/Post.js","components/Profile/PostsTape/PostsTape.js","redux/profileReducer.js","components/Profile/PostsTape/PostsTapeContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/dialogsReducer.js","components/Dialogs/UserBlock/UserBlock.js","components/Dialogs/MessageBlock/MessageBlock.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","components/Users/Users.js","redux/usersReducer.js","components/Users/UsersContainer.js","components/News/News.js","components/Settings/Settings.js","components/Music/Music.js","components/MainHeader/MainHeader.js","redux/authReducer.js","components/MainHeader/MainHeaderContainer.js","components/Main/Main.js","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/reduxStore.js","index.js"],"names":["module","exports","Friend","props","className","s","ava","src","avatarLink","alt","name","friendName","Sidebar","friends","map","friend","key","id","menu","page","to","link","activeClassName","active","sidebar","bold","SidebarContainer","connect","state","dispatch","Preloader","styles","loader","circular","viewBox","path","cx","cy","r","fill","strokeWidth","strokeMiterlimit","instance","axios","baseURL","withCredentials","headers","usersAPI","get","pageSize","currentPage","then","response","data","userId","post","delete","ProfileHeader","profile","profileCover","profileSheet","profilePhoto","photos","small","userAvatarPlaceholder","profileStatus","aboutMe","lookingForAJob","jobLooking","looking","notLooking","lookingForAJobDescription","Post","postBlock","likes","postText","PostsTape","addPost","onChange","event","changedText","target","value","changePostText","writingPostText","placeholder","onClick","posts","likesCount","initialState","userProfile","profileReducer","action","type","text","PostsTapeContainer","profilePage","changePostActionCreator","Profile","ProfileContainer","this","match","params","authorizedUserId","getUserProfile","React","Component","WithUrlDataContainerComponent","withRouter","auth","users","messages","autor","message","writingMessageText","dialogsReducer","newMessage","UserBlock","userBlock","MessageBlock","messageBlock","userName","messageText","Dialogs","dialogs","usersColumn","user","messagesColumn","addMessage","writingText","changeMessage","postField","mes","DialogsContainer","dialogsPage","changeMessageActionCreator","Users","pages","pagesCount","Math","ceil","totalUsersCount","i","push","pagesPagination","selected","e","getCurrentUsers","userItem","avatar","userPhoto","userInfo","mane","status","friendBlock","followed","isFriend","disabled","followProcessingUsers","some","uid","unfollow","follow","pagination","isFetching","loadUsers","setTotalUsersCount","toggleIsFetching","toggleIsFollowProcessing","usersReducer","filter","UsersContainer","getUsers","usersPage","setCurrentPage","resultCode","followAction","unfollowAction","items","totalCount","News","Settings","Music","MainHeader","mineHeader","wrapper","authBlock","isAuth","login","authUserAvatar","authUserAvatarPlaceholder","email","authorizedUserAvatar","authReducer","MainHeaderContainer","setAuthUserData","setAuthUserAvatar","Main","mainPicture","App","exact","render","Boolean","window","location","hostname","sidebarReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","getState","renderAll","ReactDOM","StrictMode","basename","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0ebef22e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"Users_userItem__w_zBd\",\"pagination\":\"Users_pagination__2DznN\",\"selected\":\"Users_selected__1vP1R\",\"avatar\":\"Users_avatar__1CqdD\",\"userPhoto\":\"Users_userPhoto__QbFi6\",\"userInfo\":\"Users_userInfo__nWu7K\",\"mane\":\"Users_mane__2nM4t\",\"status\":\"Users_status__1vc8V\",\"friendBlock\":\"Users_friendBlock__1LrKI\",\"isFriend\":\"Users_isFriend__2lZGL\",\"preloaderVisible\":\"Users_preloaderVisible__1ogTI\",\"preloaderUnvisible\":\"Users_preloaderUnvisible__s24VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2qBGc\",\"active\":\"Sidebar_active__2RE7F\",\"bold\":\"Sidebar_bold__1Fufz\",\"friend\":\"Sidebar_friend__1rhVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCover\":\"ProfileHeader_profileCover__ppy09\",\"profilePhoto\":\"ProfileHeader_profilePhoto__2hv0o\",\"profileStatus\":\"ProfileHeader_profileStatus__1-ISZ\",\"lookingForAJob\":\"ProfileHeader_lookingForAJob__2Os1Y\",\"lookingForAJobDescription\":\"ProfileHeader_lookingForAJobDescription__20x2w\",\"jobLooking\":\"ProfileHeader_jobLooking__3XoIx\"};","module.exports = __webpack_public_path__ + \"static/media/user_avatar_placeholder.8d17db1b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Post_postBlock__e2YHy\",\"ava\":\"Post_ava__gqrft\",\"likes\":\"Post_likes__3O-6y\",\"post\":\"Post_post__2oinp\",\"postText\":\"Post_postText__o98dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mineHeader\":\"MainHeader_mineHeader__FN-S1\",\"wrapper\":\"MainHeader_wrapper__10pp0\",\"authBlock\":\"MainHeader_authBlock__3MKYN\",\"userName\":\"MainHeader_userName__olMeq\",\"avatar\":\"MainHeader_avatar__17XqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__34Xgw\",\"circular\":\"Preloader_circular__2wtNH\",\"rotate\":\"Preloader_rotate__3JteC\",\"path\":\"Preloader_path__2VkDZ\",\"dash\":\"Preloader_dash__2ls1X\",\"color\":\"Preloader_color__3OYLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendName\":\"Friend_friendName__2oLor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Xpin\",\"userBlock\":\"Dialogs_userBlock__3ZjkJ\",\"ava\":\"Dialogs_ava__3ZQ4t\",\"active\":\"Dialogs_active__nkuLR\",\"addMessage\":\"Dialogs_addMessage__3-lJG\",\"postField\":\"Dialogs_postField__33IBz\",\"messagesColumn\":\"Dialogs_messagesColumn__290kT\",\"message\":\"Dialogs_message__3lbky\",\"messageBlock\":\"Dialogs_messageBlock__3wHy1\",\"userName\":\"Dialogs_userName__wYCxL\",\"messageText\":\"Dialogs_messageText__3nLSN\"};","module.exports = __webpack_public_path__ + \"static/media/looking_job.0c569380.svg\";","module.exports = __webpack_public_path__ + \"static/media/not_looking_job.d0c709f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.1ea9acb5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"PostsTape_addPost__31cbv\"};","module.exports = __webpack_public_path__ + \"static/media/main.a380a2be.jpg\";","import React, { Fragment } from 'react';\r\nimport s from './Friend.module.css';\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <img className={s.ava} src={props.avatarLink} alt={`${props.name}'s avatar`} />\r\n            <span className={s.friendName}>{props.name}</span>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\nimport Friend from './Friends/Friend';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let friends = props.friends.map(friend => {\r\n\r\n        return(\r\n            <div key={friend.id} className={s.friend}><Friend name={friend.name} avatarLink={friend.avatarLink} /></div>\r\n        )\r\n    });\r\n\r\n    let menu = props.menu.map(page => {\r\n        return(\r\n            <li key={page.page}><NavLink to={page.link} activeClassName={s.active}>{page.page}</NavLink></li>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <nav className={s.sidebar}>\r\n            <ul>\r\n                {menu}\r\n                <li className={s.bold}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></li>\r\n            </ul>\r\n\r\n            <div>\r\n                <ul>\r\n                    <li className={s.bold}><NavLink to=\"/friends\" activeClassName={s.active}>My friends</NavLink></li>\r\n                </ul>\r\n                {friends}             \r\n            </div>\r\n        </nav>\r\n    );\r\n    \r\n}\r\n\r\nexport default Sidebar;","import Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n/* const SidebarContainer = (props) => {\r\n    return(\r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n\r\n                let state = store.getState();\r\n\r\n                return <Sidebar friends={state.sidebar.friends} menu={state.sidebar.menu} />\r\n            }}\r\n        </StoreContext.Consumer>\r\n    )\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends,\r\n        menu: state.sidebar.menu\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;","import React from 'react';\nimport styles from './Preloader.module.css';\n\nconst Preloader = (props) => {\n\n    return <div className={styles.loader}>\n        <svg className={styles.circular} viewBox=\"25 25 50 50\">\n            <circle className={styles.path} cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\n        </svg>\n    </div>\n}\n\nexport default Preloader;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '69ce5c37-4614-409a-848d-cee47ea3fbcd'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n\r\n    /* MainHeaderContainer - to get and set authorized user data */\r\n    getAuthMeData() {\r\n        return instance.get('auth/me')\r\n    },\r\n\r\n    /* UserContainer - to get part of users for start/current page */\r\n    getUsers(pageSize = 10, currentPage = 1) {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}`)\r\n        .then(response => response.data)\r\n    },\r\n\r\n    /* MainHeaderContainer, ProfileContainer - to get certain user propfile */\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n        /* .then(response => response.data) */\r\n    },\r\n\r\n    /* Users - to follow certain user */\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    /* Users - to follow certain user */\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styles from './ProfileHeader.module.css';\r\nimport Preloader from '../../commom/Preloader/Preloader';\r\nimport looking from '../../../img/looking_job.svg';\r\nimport notLooking from '../../../img/not_looking_job.svg';\r\nimport userAvatarPlaceholder from '../../../img/user_avatar_placeholder.png';\r\nimport profileSheet from '../../../img/profile.jpg';\r\nimport { usersAPI } from '../../../API/API';\r\n\r\n\r\nconst ProfileHeader = (props) => {\r\n\r\n    usersAPI.getAuthMeData();\r\n    \r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return <>\r\n        <div className={styles.profileCover}>\r\n            <img src={profileSheet} alt=\"czech\" />\r\n            <img className={styles.profilePhoto} src={!props.profile.photos.small ? userAvatarPlaceholder : props.profile.photos.small} alt={'user ' + props.profile.userId + ' photo'} />\r\n        </div>\r\n\r\n        <div className={styles.profileStatus}>{props.profile.aboutMe}</div>\r\n        <div className={styles.lookingForAJob}>\r\n            <span>Is looking for a job:</span><img className={styles.jobLooking} src={props.profile.lookingForAJob === true ? looking : notLooking} alt='looking for a job' />\r\n        </div>\r\n        <div className={styles.lookingForAJobDescription}>{props.profile.lookingForAJobDescription}</div>\r\n    </>\r\n}\r\n\r\nexport default ProfileHeader;\r\n\r\n","import React from 'react';\r\nimport s from'./Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className={s.postBlock}>\r\n            <div className={s.ava}>\r\n                <img src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"user avatar\" />\r\n                <span className={s.likes}>Likes: {props.likes}</span>\r\n            </div>\r\n            <div className={s.post}>\r\n                <p className={s.postText}>{props.post}</p>\r\n            </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './PostsTape.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst PostsTape = (props) => {\r\n    const onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    const changePostText = (event) => {\r\n        let changedText = event.target.value;\r\n        props.changePostText(changedText);\r\n    }    \r\n\r\n    return <>\r\n            <div className={s.addPost}>\r\n                <textarea onChange={changePostText} value={props.writingPostText} placeholder=\" create your new post\" />\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div>\r\n\r\n            {props.posts.map(post => {\r\n                return <Post key={post.id} post={post.postText} likes={post.likesCount} />\r\n            })}\r\n    </>  \r\n}\r\n\r\nexport default PostsTape;","const ADD_POST = 'ADD-POST';\r\nconst CHANGE_POST = 'CHANGE-POST';\r\nconst GET_USER_PROFILE = 'GET-USER-PROFILE';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, postText: 'Hi there!', likesCount: 10},\r\n    {id: 2, postText: 'It\\'s my new post.', likesCount: 25765},\r\n  ],\r\n  writingPostText: '',\r\n  userProfile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_POST: \r\n      let text = state.writingPostText;\r\n\r\n        return {\r\n          ...state,\r\n          posts: [ ...state.posts, {id: 3, postText: text, likesCount: 0} ],\r\n          writingPostText: ''\r\n        }\r\n      \r\n      case CHANGE_POST:      \r\n        return {\r\n          ...state, writingPostText: action.text\r\n        }\r\n\r\n      case GET_USER_PROFILE:\r\n        return {\r\n          ...state, userProfile: action.userProfile\r\n        }\r\n      \r\n      default: \r\n        return state;\r\n      \r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const changePostActionCreator = (text) => ({ type: CHANGE_POST, text });\r\nexport const getUserProfile = (userProfile) => ({ type: GET_USER_PROFILE, userProfile });\r\n\r\nexport default profileReducer;","import PostsTape from './PostsTape';\r\nimport { addPostActionCreator, changePostActionCreator } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        writingPostText: state.profilePage.writingPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        changePostText: (text) => {\r\n            dispatch(changePostActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsTapeContainer = connect(mapStateToProps, mapDispatchToProps)(PostsTape);\r\n\r\nexport default PostsTapeContainer;","import React from 'react';\r\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\r\nimport PostsTapeContainer from './PostsTape/PostsTapeContainer';\r\n\r\nconst Profile = (props) => {\r\n    \r\n        return <>\r\n                <header>\r\n                    <ProfileHeader profile={props.profile} />\r\n                </header>\r\n                <main>\r\n                    <PostsTapeContainer />  \r\n                </main>             \r\n            </>  \r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { usersAPI } from '../../API/API';\r\n\r\nclass ProfileContainer extends React.Component {\r\n     \r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        usersAPI.getProfile(userId) \r\n        .then(response => this.props.getUserProfile(response.data));\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.userProfile} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    authorizedUserId: state.auth.userId\r\n});\r\n\r\nconst WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst CHANGE_MESSAGE = 'CHANGE-MESSAGE';\r\n\r\nlet initialState = {\r\n  users: [\r\n    {id: 1, name: 'Tom'},\r\n    {id: 2, name: 'Helen'},\r\n    {id: 3, name: 'Sarah'},\r\n    {id: 4, name: 'George'},\r\n  ],\r\n  messages: [\r\n    {id: 1, autor: 'Tom', message: 'Hi! Are you busy today?'},\r\n    {id: 2, autor: 'Me', message: 'Hi! I\\'ve free time in afternoon. What\\'s the matter?'},\r\n    {id: 3, autor: 'Tom', message: 'I want to talk with you.'},\r\n    {id: 4, autor: 'Me', message: 'OK, let\\'s meet at 6 o\\'clock?'},\r\n  ],\r\n  writingMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_MESSAGE: \r\n\r\n        let newMessage = state.writingMessageText;\r\n\r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, {id: 5, autor: 'Me', message: newMessage},],\r\n          writingMessageText: ''\r\n        }\r\n\r\n      case CHANGE_MESSAGE: \r\n\r\n        return {\r\n          ...state,\r\n          writingMessageText: action.text\r\n        }\r\n             \r\n      default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessageActionCreator = () => {\r\n    return {\r\n      type: ADD_MESSAGE\r\n    }\r\n  }\r\n  \r\nexport const changeMessageActionCreator = (text) => {\r\n    return {\r\n        type: CHANGE_MESSAGE,\r\n        text: text\r\n      }\r\n    }\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserBlock = (props) =>{\r\n\r\n    return(\r\n        <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>\r\n            <div className={s.userBlock}>\r\n                <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n                {props.name}\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default UserBlock;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst MessageBlock = (props) => {\r\n\r\n    return(\r\n        <div className={s.message}>\r\n            <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n            <div className={s.messageBlock}>\r\n                <h5 className={s.userName}>{props.autor}</h5>\r\n                <p className={s.messageText}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBlock;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport UserBlock from './UserBlock/UserBlock';\r\nimport MessageBlock from './MessageBlock/MessageBlock';\r\n\r\n\r\nconst Dialogs = (props) => { \r\n\r\n    const onAddMessage = () => {        \r\n        props.addMessage();\r\n    }\r\n\r\n    const onChangeMessage = (event) => {\r\n        let writingText = event.target.value;\r\n        props.changeMessage(writingText);\r\n    }\r\n\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.usersColumn}>\r\n\r\n                {props.users.map(user => <UserBlock key={user.id} id={user.id} name={user.name} />)}\r\n\r\n            </div>\r\n            <div className={s.messagesColumn}>\r\n                <div className={s.addMessage}>\r\n                    <textarea onChange={onChangeMessage} className={s.postField} value={props.writingMessageText} placeholder=\" write your message here\" />\r\n                    <button onClick={onAddMessage}>Send message</button>\r\n                </div>\r\n\r\n                {props.messages.map(mes => <MessageBlock key={mes.id} autor={mes.autor} message={mes.message} />)}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { addMessageActionCreator, changeMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.dialogsPage.users,\r\n        messages: state.dialogsPage.messages,\r\n        writingMessageText: state.dialogsPage.writingMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {        \r\n            dispatch(addMessageActionCreator());\r\n        },\r\n        changeMessage: (text) => {\r\n            dispatch(changeMessageActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userAvatarPlaceholder from '../../img/user_avatar_placeholder.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Users = (props) => {\r\n\r\n    let pages = [];\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    for(let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let pagesPagination = pages.map(page => {\r\n        return <span key={page} className={page === props.currentPage ? styles.selected : ''} \r\n        onClick={ (e) => props.getCurrentUsers(page)}>{page}</span>\r\n    });\r\n\r\n    let users = props.users.map(user => {\r\n\r\n        return (\r\n            <div key={user.id} className={styles.userItem}>\r\n                <NavLink to={\"profile/\" + user.id}>\r\n                    <div className={styles.avatar}>\r\n                        <img className={styles.userPhoto} alt=\"user-avatar\" src={user.photos.small !== null ? user.photos.small : userAvatarPlaceholder} />\r\n                    </div>\r\n                </NavLink>\r\n                <div className={styles.userInfo}>\r\n                    <div className={styles.mane}>{user.name}</div>\r\n                    <div className={styles.status}>{user.status}</div>                       \r\n                </div>\r\n                <div className={styles.friendBlock}>\r\n\r\n                    {user.followed ? \r\n                    <div className={styles.isFriend}>\r\n                        <span>friend</span>\r\n                        <button disabled={props.followProcessingUsers.some(uid => uid === user.id)} onClick={ () => {\r\n                            props.unfollow(user.id);\r\n                            /* props.toggleIsFollowProcessing(true, user.id);\r\n                            props.toggleIsFetching(true);\r\n\r\n                            usersAPI.unfollow(user.id)\r\n                            .then(response => {\r\n                                if(response.data.resultCode === 0) {\r\n                                    props.unfollow(user.id);\r\n                                }\r\n                                props.toggleIsFollowProcessing(false, user.id);\r\n                                props.toggleIsFetching(false);\r\n                            });  */\r\n\r\n                        } }>Unfollow</button></div> : \r\n\r\n                        <button className={styles.isFriend} \r\n                        disabled={props.followProcessingUsers.some(uid => uid === user.id)} onClick={ () => {\r\n                            props.follow(user.id);\r\n/*                             props.toggleIsFollowProcessing(true, user.id);\r\n                            props.toggleIsFetching(true);\r\n\r\n                            usersAPI.follow(user.id)\r\n                            .then(response => {\r\n                                if(response.data.resultCode === 0) {\r\n                                    props.follow(user.id);\r\n                                }\r\n                                props.toggleIsFollowProcessing(false, user.id);\r\n                                props.toggleIsFetching(false);\r\n                            });  */\r\n                            \r\n                        } }>Follow</button>}\r\n                </div>                   \r\n            </div>\r\n        )\r\n    });\r\n\r\n    return <>\r\n        <div className={styles.pagination}>{pagesPagination}</div>\r\n        <div className={styles.users}>{users}</div>\r\n    </>\r\n}\r\n\r\nexport default Users;","import { usersAPI } from \"../API/API\";\r\n\r\nconst LOAD_USERS = 'LOAD-USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOW_PROCESSING = 'TOGGLE-IS-FOLLOW-PROCESSING';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followProcessingUsers: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USERS:\r\n            return {\r\n                ...state, users: [ ...action.users]\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })             \r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOW_PROCESSING:\r\n            return {\r\n                ...state, \r\n                followProcessingUsers: action.isFetching \r\n                ? [...state.followProcessingUsers, action.userId] \r\n                : [state.followProcessingUsers.filter(uid => uid !== action.userId)] \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loadUsers = (users) => ({type: LOAD_USERS, users});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const followAction = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAction = (userId) => ({type: UNFOLLOW, userId});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching}); \r\nexport const toggleIsFollowProcessing = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOW_PROCESSING, isFetching, userId});\r\n\r\n/* thunks */\r\n\r\nexport const getUsers = (pageSize, currentPage) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(pageSize, currentPage)\r\n        .then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(loadUsers(data.items));   \r\n            dispatch(setTotalUsersCount(data.totalCount)); \r\n        });  \r\n    }\r\n} \r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowProcessing(true, userId));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n    usersAPI.follow(userId)\r\n    .then(response => {\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(followAction(userId));\r\n        }\r\n        dispatch(toggleIsFollowProcessing(false, userId));\r\n        dispatch(toggleIsFetching(false));\r\n    }); \r\n    } \r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowProcessing(true, userId));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n    usersAPI.unfollow(userId)\r\n    .then(response => {\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(unfollowAction(userId));\r\n        }\r\n        dispatch(toggleIsFollowProcessing(false, userId));\r\n        dispatch(toggleIsFetching(false));\r\n    }); \r\n    } \r\n}\r\n\r\nexport default usersReducer;","import React from 'react'; \r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../commom/Preloader/Preloader';\r\nimport { loadUsers, setTotalUsersCount, setCurrentPage, follow, unfollow, toggleIsFetching, toggleIsFollowProcessing, getUsers } from '../../redux/usersReducer';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.pageSize, this.props.currentPage);\r\n/*         this.props.toggleIsFetching(true);\r\n        usersAPI.getUsers(this.props.pageSize, this.props.currentPage)\r\n        .then(data => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.loadUsers(data.items);   \r\n            this.props.setTotalUsersCount(data.totalCount); \r\n        });   */      \r\n    }\r\n\r\n    getCurrentUsers = (currentPage) => {\r\n        this.props.getUsers(this.props.pageSize, currentPage);\r\n/*         this.props.setCurrentPage(currentPage);\r\n        this.props.toggleIsFetching(true);\r\n        usersAPI.getUsers(this.props.pageSize, currentPage)\r\n        .then(data => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.loadUsers(data.items);\r\n        });  */       \r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            \r\n            <Users \r\n                users={this.props.users} \r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                isFetching={this.props.isFetching}\r\n                getCurrentUsers={this.getCurrentUsers}\r\n                toggleIsFetching={this.props.toggleIsFetching}\r\n                toggleIsFollowProcessing={this.props.toggleIsFollowProcessing}\r\n                followProcessingUsers={this.props.followProcessingUsers} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followProcessingUsers: state.usersPage.followProcessingUsers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, \r\n    {loadUsers, setTotalUsersCount, setCurrentPage, follow, unfollow, toggleIsFetching, toggleIsFollowProcessing, getUsers})(UsersContainer);","import React from 'react';\r\n//import s from './News.module.css';\r\n\r\n\r\nclass News extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>News</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\n\r\nclass Settings extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>Settings</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\n//import s from './Music.module.css';\r\n\r\n\r\nclass Music extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>Music</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './MainHeader.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport authUserAvatarPlaceholder from '../../img/user_avatar_placeholder.png';\r\n\r\n\r\nconst MainHeader = (props) => {\r\n\r\n    return <div className={styles.mineHeader}>\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.authBlock}>\r\n                <span className={styles.userName}>{props.isAuth ? props.login : <NavLink to=\"/login\">Login</NavLink>}</span>\r\n                <img className={styles.avatar} src={props.authUserAvatar ? props.authUserAvatar : authUserAvatarPlaceholder} alt=\"autorized user avatar\" />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MainHeader;","const SET_AUTH_USER_DATA = 'SET-AUTH-USER-DATA';\r\nconst SET_AUTH_USER_AVATAR = 'SET-AUTH-USER-AVATAR';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authorizedUserAvatar: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state, \r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        case SET_AUTH_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                authUserAvatar: action.authUserAvatar\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email) => ({type: SET_AUTH_USER_DATA, data: {userId, login, email}});\r\nexport const setAuthUserAvatar = (authUserAvatar) => ({type: SET_AUTH_USER_AVATAR, authUserAvatar});\r\n//export const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching}); \r\n\r\nexport default authReducer;","import React from 'react';\r\nimport MainHeader from './MainHeader';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthUserData, setAuthUserAvatar } from '../../redux/authReducer';\r\nimport { usersAPI } from '../../API/API';\r\n\r\nclass MainHeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        usersAPI.getAuthMeData()\r\n        .then(response => {\r\n            if(response.data.resultCode === 0) {  \r\n                let {id, login, email} = response.data.data;\r\n                this.props.setAuthUserData(id, login, email);\r\n            }          \r\n        });\r\n\r\n        usersAPI.getProfile(this.props.id)\r\n        .then(response => {\r\n            let authUserAvatar = response.data.photos.small;\r\n            this.props.setAuthUserAvatar(authUserAvatar);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <MainHeader {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n    authUserAvatar: state.auth.authUserAvatar\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData, setAuthUserAvatar})(MainHeaderContainer);","import React from 'react';\r\nimport { usersAPI } from '../../API/API';\r\nimport mainPicture from '../../img/main.jpg';\r\n\r\nconst Main = () => {\r\n\r\n    usersAPI.getAuthMeData();\r\n\r\n    return <>\r\n            <img src={mainPicture} alt=\"main\" />\r\n        </>\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport SidebarContainer from './components/Sidebar/SidebarContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport Music from './components/Music/Music';\r\nimport MainHeaderContainer from './components/MainHeader/MainHeaderContainer';\r\nimport Main from './components/Main/Main';\r\n//import Login from './components/Login/Login';\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className='app'>\r\n        <MainHeaderContainer />\r\n      <div className='wrapper'>            \r\n          <SidebarContainer />       \r\n        <div className='contentBlock'>\r\n\r\n          <Route exact path='/' render={ () => <Main />} />\r\n\r\n          <Route path='/profile/:userId?' render={ () => <ProfileContainer />} />\r\n          <Route path=\"/users\" render={ () => <UsersContainer />} />\r\n \r\n          <Route exact path='/dialogs' render={ () => <DialogsContainer />} />\r\n\r\n          <Route path='/news' render={ () => <News />} />\r\n          <Route path='/music' render={ () => <Music />} />\r\n          <Route path='/settings' render={ () => <Settings />} />\r\n\r\n        </div> \r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'James', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 2, name: 'Kirk', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 3, name: 'Lars', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 4, name: 'Robert', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n      ],\r\n      menu: [\r\n        {link: '/profile', page: 'Profile'},       \r\n        {link: '/dialogs', page: 'Dialogs'},\r\n        {link: '/users', page: 'Users'},\r\n        {link: '/news', page: 'News'},\r\n        {link: '/music', page: 'Music'},\r\n      ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer'\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.state = store.getState();\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nconst renderAll = (state) => {\r\n\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <BrowserRouter basename=\"/soc-net\">\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        </BrowserRouter>\r\n      </React.StrictMode>,\r\n      document.getElementById('root')\r\n    );\r\n  }\r\n\r\n\r\nrenderAll(store.getState()); //first rendering\r\n//and now we need state and we are getting it by\r\n//calling getState()\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  renderAll(state);\r\n});\r\n//subscribe(renderAll); //\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}