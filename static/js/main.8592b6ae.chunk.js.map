{"version":3,"sources":["components/Dialogs/Dialogs.module.css","img/looking_job.svg","img/not_looking_job.svg","img/profile.jpg","components/Profile/PostsTape/PostsTape.module.css","img/main.jpg","components/Users/Users.module.css","components/Sidebar/Friends/Friend.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/commom/Preloader/Preloader.js","components/Profile/ProfileStatus.js","components/Profile/ProfileHeader/ProfileHeader.js","components/Profile/PostsTape/Post/Post.js","components/Profile/PostsTape/PostsTape.js","API/API.js","redux/profileReducer.js","components/Profile/PostsTape/PostsTapeContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/dialogsReducer.js","components/Dialogs/UserBlock/UserBlock.js","components/Dialogs/MessageBlock/MessageBlock.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","components/Users/Paginator/Paginator.js","components/Users/Users.js","redux/usersReducer.js","components/Users/UsersContainer.js","components/News/News.js","hoc/withAuthRedirect.js","components/News/NewsContainer.js","components/MainHeader/MainHeader.js","redux/authReducer.js","components/MainHeader/MainHeaderContainer.js","components/Main/Main.js","components/Login/Login.js","components/Music/Music.js","components/Music/MusicContainer.js","components/Settings/Settings.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/reduxStore.js","index.js","components/Profile/Profile.module.css","img/user_avatar_placeholder.png","components/Sidebar/Sidebar.module.css","components/Profile/PostsTape/Post/Post.module.css","components/MainHeader/MainHeader.module.css","components/Users/Paginator/Paginator.module.css","components/commom/Preloader/Preloader.module.css","components/Sidebar/Friends/Friend.module.css","components/Login/Login.module.css"],"names":["module","exports","Friend","props","className","s","ava","src","avatarLink","alt","name","friendName","Sidebar","friends","map","friend","key","id","menu","page","to","link","activeClassName","active","sidebar","bold","SidebarContainer","connect","state","dispatch","Preloader","styles","loader","circular","viewBox","path","cx","cy","r","fill","strokeWidth","strokeMiterlimit","ProfileStatus","status","editMode","activateEditMode","setState","getNewStatus","e","currentTarget","value","console","log","deactivateEditMode","updateStatus","prevProps","prevState","this","profileStatus","onDoubleClick","title","inputStatus","onChange","onBlur","autoFocus","React","Component","ProfileHeader","profile","profileCover","profileSheet","profilePhoto","photos","small","userAvatarPlaceholder","userId","lookingForAJob","jobLooking","looking","notLooking","lookingForAJobDescription","Post","postBlock","likes","post","postText","PostForm","handleSubmit","onSubmit","Field","component","type","placeholder","reduxForm","form","PostsTape","addPost","posts","likesCount","instance","axios","baseURL","withCredentials","headers","usersAPI","pageSize","currentPage","get","then","response","data","delete","profileAPI","put","authAPI","loginFormData","initialState","writingPostText","userProfile","setUserStatus","profileReducer","action","text","PostsTapeContainer","profilePage","changePostText","changePostActionCreator","Profile","ProfileContainer","match","params","getProfile","getStatus","compose","resultCode","withRouter","users","messages","writingMessageText","dialogsReducer","newMessage","autor","message","UserBlock","userBlock","MessageBlock","messageBlock","userName","messageText","Dialogs","dialogs","usersColumn","user","messagesColumn","addMessage","event","writingText","target","changeMessage","postField","onClick","mes","DialogsContainer","dialogsPage","Paginator","pages","pagesCount","Math","ceil","totalUsersCount","i","push","useState","currentRange","setCurrentRange","leftLimit","rightLimit","pagesPagination","filter","selected","getCurrentUsers","ranges","pagination","paginationNav","Users","userItem","avatar","userPhoto","userInfo","mane","friendBlock","followed","isFriend","disabled","followProcessingUsers","some","uid","unfollow","follow","isFetching","toggleIsFetching","toggleIsFollowProcessing","usersReducer","UsersContainer","getUsers","usersPage","followAction","unfollowAction","items","setCurrentPage","totalCount","News","withAuthRedirect","RedirectComponent","isAuth","auth","MainHeader","mineHeader","wrapper","authBlock","login","authUserAvatar","authUserAvatarPlaceholder","email","authorizedUserAvatar","authReducer","MainHeaderContainer","setAuthMeData","setAuthUserData","setAuthUserAvatar","Main","mainPicture","LoginReduxForm","htmlFor","Login","loginPage","modalWindow","sendAuthUserData","Music","Settings","App","exact","render","Boolean","window","location","hostname","sidebarReducer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","renderAll","ReactDOM","basename","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8592b6ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Xpin\",\"userBlock\":\"Dialogs_userBlock__3ZjkJ\",\"ava\":\"Dialogs_ava__3ZQ4t\",\"active\":\"Dialogs_active__nkuLR\",\"addMessage\":\"Dialogs_addMessage__3-lJG\",\"postField\":\"Dialogs_postField__33IBz\",\"messagesColumn\":\"Dialogs_messagesColumn__290kT\",\"message\":\"Dialogs_message__3lbky\",\"messageBlock\":\"Dialogs_messageBlock__3wHy1\",\"userName\":\"Dialogs_userName__wYCxL\",\"messageText\":\"Dialogs_messageText__3nLSN\"};","module.exports = __webpack_public_path__ + \"static/media/looking_job.0c569380.svg\";","module.exports = __webpack_public_path__ + \"static/media/not_looking_job.d0c709f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.1ea9acb5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"PostsTape_addPost__31cbv\"};","module.exports = __webpack_public_path__ + \"static/media/main.a380a2be.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"Users_userItem__w_zBd\",\"avatar\":\"Users_avatar__1CqdD\",\"userPhoto\":\"Users_userPhoto__QbFi6\",\"userInfo\":\"Users_userInfo__nWu7K\",\"mane\":\"Users_mane__2nM4t\",\"status\":\"Users_status__1vc8V\",\"friendBlock\":\"Users_friendBlock__1LrKI\",\"isFriend\":\"Users_isFriend__2lZGL\",\"preloaderVisible\":\"Users_preloaderVisible__1ogTI\",\"preloaderUnvisible\":\"Users_preloaderUnvisible__s24VE\"};","import React, { Fragment } from 'react';\r\nimport s from './Friend.module.css';\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <img className={s.ava} src={props.avatarLink} alt={`${props.name}'s avatar`} />\r\n            <span className={s.friendName}>{props.name}</span>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\nimport Friend from './Friends/Friend';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let friends = props.friends.map(friend => {\r\n\r\n        return(\r\n            <div key={friend.id} className={s.friend}><Friend name={friend.name} avatarLink={friend.avatarLink} /></div>\r\n        )\r\n    });\r\n\r\n    let menu = props.menu.map(page => {\r\n        return(\r\n            <li key={page.page}><NavLink to={page.link} activeClassName={s.active}>{page.page}</NavLink></li>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <nav className={s.sidebar}>\r\n            <ul>\r\n                {menu}\r\n                <li className={s.bold}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></li>\r\n            </ul>\r\n\r\n            <div>\r\n                <ul>\r\n                    <li className={s.bold}><NavLink to=\"/friends\" activeClassName={s.active}>My friends</NavLink></li>\r\n                </ul>\r\n                {friends}             \r\n            </div>\r\n        </nav>\r\n    );\r\n    \r\n}\r\n\r\nexport default Sidebar;","import Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n/* const SidebarContainer = (props) => {\r\n    return(\r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n\r\n                let state = store.getState();\r\n\r\n                return <Sidebar friends={state.sidebar.friends} menu={state.sidebar.menu} />\r\n            }}\r\n        </StoreContext.Consumer>\r\n    )\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends,\r\n        menu: state.sidebar.menu\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;","import React from 'react';\nimport styles from './Preloader.module.css';\n\nconst Preloader = (props) => {\n\n    return <div className={styles.loader}>\n        <svg className={styles.circular} viewBox=\"25 25 50 50\">\n            <circle className={styles.path} cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\n        </svg>\n    </div>\n}\n\nexport default Preloader;","import React from 'react';\r\nimport styles from './Profile.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state={\r\n        status: this.props.status,\r\n        editMode: false\r\n    }\r\n\r\n\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true});\r\n    }\r\n\r\n    getNewStatus = (e) => {\r\n        this.setState({status: e.currentTarget.value});\r\n        console.log('getNewStatus:' + this.state.status);\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false});\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n            if(prevProps.status !== this.props.status) {\r\n                this.setState({ status: this.props.status });\r\n            }\r\n        }\r\n\r\n    render() {\r\n        return<>\r\n\r\n            {!this.state.editMode && <div className={styles.profileStatus} onDoubleClick={this.activateEditMode} title=\"double click to change\">{this.props.status || 'Double click to set status'}</div>}\r\n            \r\n            {this.state.editMode && <div className={styles.inputStatus}><input onChange={this.getNewStatus} onBlur={this.deactivateEditMode} value={this.state.status} autoFocus /></div>}\r\n                      \r\n        </>\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport styles from './../Profile.module.css';\r\nimport Preloader from '../../commom/Preloader/Preloader';\r\nimport looking from '../../../img/looking_job.svg';\r\nimport notLooking from '../../../img/not_looking_job.svg';\r\nimport userAvatarPlaceholder from '../../../img/user_avatar_placeholder.png';\r\nimport profileSheet from '../../../img/profile.jpg';\r\nimport ProfileStatus from '../ProfileStatus';\r\n\r\n\r\nconst ProfileHeader = (props) => {\r\n\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return <>\r\n        <div className={styles.profileCover}>\r\n            <img src={profileSheet} alt=\"profile\" />\r\n            <img className={styles.profilePhoto} src={!props.profile.photos.small ? userAvatarPlaceholder : props.profile.photos.small} alt={'user ' + props.profile.userId + ' photo'} />\r\n        </div>\r\n        <div className={styles.lookingForAJob}>\r\n            <span>Is looking for a job:</span><img className={styles.jobLooking} src={props.profile.lookingForAJob === true ? looking : notLooking} alt='looking for a job' />\r\n        </div>\r\n        <div className={styles.lookingForAJobDescription}>{props.profile.lookingForAJobDescription}</div>\r\n        <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n    </>\r\n}\r\n\r\nexport default ProfileHeader;\r\n\r\n","import React from 'react';\r\nimport s from'./Post.module.css';\r\nimport userAvatarPlaceholder from '../../../../img/user_avatar_placeholder.png';\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className={s.postBlock}>\r\n            <div className={s.ava}>\r\n                <img src={userAvatarPlaceholder} alt=\"user avatar\" />\r\n                <span className={s.likes}>Likes: {props.likes}</span>\r\n            </div>\r\n            <div className={s.post}>\r\n                <p className={s.postText}>{props.post}</p>\r\n            </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './PostsTape.module.css';\r\nimport Post from './Post/Post';\r\n//import PostForm from './PostForm';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nlet PostForm = props => {\r\n    console.log('rere');\r\n    const { handleSubmit } = props;\r\n    return <form onSubmit={handleSubmit}>\r\n        <Field name=\"post\" component=\"input\" type=\"textarea\" placeholder=\" create your new post\" autoFocus />\r\n        <button type=\"submit\">Add post</button>\r\n    </form>\r\n}\r\n\r\nPostForm = reduxForm({ form: 'post' })(PostForm);\r\n\r\nconst PostsTape = props => {\r\n    let onSubmit = postText => {\r\n        props.addPost();\r\n        const changePostText = () => {\r\n        \r\n        props.changePostText(postText);\r\n    }\r\n    }\r\n/*     const onAddPost = () => {\r\n        props.addPost();\r\n    } */\r\n\r\n/*     const changePostText = (event) => {\r\n        let changedText = event.target.value;\r\n        props.changePostText(changedText);\r\n    }    */ \r\n\r\n    return <>\r\n            <div className={s.addPost}>\r\n                <PostForm onSubmit={onSubmit} />\r\n            </div>\r\n\r\n            {props.posts.map(post => {\r\n                return <Post key={post.id} post={post.postText} likes={post.likesCount} />\r\n            })}\r\n    </>  \r\n}\r\n\r\nexport default PostsTape;\r\n\r\n\r\n\r\n/* import React from 'react';\r\nimport s from './PostsTape.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst PostsTape = (props) => {\r\n    const onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    const changePostText = (event) => {\r\n        let changedText = event.target.value;\r\n        props.changePostText(changedText);\r\n    }    \r\n\r\n    return <>\r\n            <div className={s.addPost}>\r\n                <textarea onChange={changePostText} value={props.writingPostText} placeholder=\" create your new post\" autoFocus />\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div>\r\n\r\n            {props.posts.map(post => {\r\n                return <Post key={post.id} post={post.postText} likes={post.likesCount} />\r\n            })}\r\n    </>  \r\n}\r\n\r\nexport default PostsTape; */","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '69ce5c37-4614-409a-848d-cee47ea3fbcd'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    \r\n    /* UserContainer - to get part of users for start/current page */\r\n    getUsers(pageSize = 10, currentPage = 1) {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}`)\r\n        .then(response => response.data)\r\n    },\r\n\r\n    /* Users - to follow certain user */\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    /* Users - to follow certain user */\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    \r\n    /* MainHeaderContainer, ProfileContainer - to get certain user profile */\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n        /* .then(response => response.data) */\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    /* MainHeaderContainer - to get and set authorized user data */\r\n    getAuthMeData() {\r\n        return instance.get('auth/me');\r\n    },\r\n\r\n    /* Login - to login if user is not authorized  */\r\n    sendAuthData(loginFormData) {\r\n        return instance.post('auth/login', {loginFormData});\r\n    }  \r\n}\r\n","import { profileAPI } from \"../API/API\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst CHANGE_POST = 'CHANGE-POST';\r\nconst GET_USER_PROFILE = 'GET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'SET-USER-STATUS';\r\n\r\nlet initialState = {\r\n  posts: [\r\n/*     {id: 1, postText: 'Hi there!', likesCount: 10},\r\n    {id: 2, postText: 'It\\'s my new post.', likesCount: 25765}, */\r\n  ],\r\n  writingPostText: '',\r\n  userProfile: null,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_POST: \r\n      let text = state.writingPostText;\r\n\r\n        return {\r\n          ...state,\r\n          posts: [ ...state.posts, {id: 3, postText: text, likesCount: 0} ],\r\n          writingPostText: ''\r\n        }\r\n      \r\n      case CHANGE_POST:      \r\n        return {\r\n          ...state, writingPostText: action.text\r\n        }\r\n\r\n      case GET_USER_PROFILE:\r\n        return {\r\n          ...state, userProfile: action.userProfile\r\n        }\r\n\r\n      case SET_USER_STATUS:\r\n        return {\r\n          ...state, status: action.status\r\n        }\r\n      \r\n      default: \r\n        return state;\r\n      \r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const changePostActionCreator = (text) => ({ type: CHANGE_POST, text });\r\nexport const getUserProfile = (userProfile) => ({ type: GET_USER_PROFILE, userProfile });\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status });\r\n\r\n/* thunk */\r\n\r\nexport const getProfile = (userId) => {\r\n  return (dispatch) => {\r\n    profileAPI.getProfile(userId) \r\n    .then(response => dispatch(getUserProfile(response.data)));\r\n  }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n  return (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n    .then(response => dispatch(setUserStatus(response.data)));\r\n  }\r\n}\r\n/* 2-nd way to write arrow function without return */\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n    .then(response => {\r\n      if(response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n      }\r\n    })\r\n  }\r\n\r\nexport default profileReducer;","import PostsTape from './PostsTape';\r\nimport { addPostActionCreator, changePostActionCreator } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        writingPostText: state.profilePage.writingPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        changePostText: (text) => {\r\n            dispatch(changePostActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsTapeContainer = connect(mapStateToProps, mapDispatchToProps)(PostsTape);\r\n\r\nexport default PostsTapeContainer;","import React from 'react';\r\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\r\nimport PostsTapeContainer from './PostsTape/PostsTapeContainer';\r\n\r\nconst Profile = (props) => {\r\n        return <>\r\n                <header>\r\n                    <ProfileHeader profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n                </header>\r\n                <main>                   \r\n                    <PostsTapeContainer />  \r\n                </main>             \r\n            </>  \r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { /* getUserProfile,  */getProfile, getStatus, updateStatus } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\n//import { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n     \r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            /* userId = this.props.authorizedUserId */;\r\n            userId = 9095;\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.userProfile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    }\r\n}\r\n\r\n/* the same with compose: */\r\nconst mapStateToProps = (state) => ({ \r\n    userProfile: state.profilePage.userProfile,\r\n    status: state.profilePage.status \r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    /* withAuthRedirect */\r\n)(ProfileContainer);\r\n\r\n//let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n//const mapStateToProps = (state) => ({ userProfile: state.profilePage.userProfile });\r\n\r\n//const WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n//export default connect(mapStateToProps, {/* getUserProfile,  */getProfile})(WithUrlDataContainerComponent);","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst CHANGE_MESSAGE = 'CHANGE-MESSAGE';\r\n\r\nlet initialState = {\r\n  users: [\r\n    {id: 1, name: 'Tom'},\r\n    {id: 2, name: 'Helen'},\r\n    {id: 3, name: 'Sarah'},\r\n    {id: 4, name: 'George'},\r\n  ],\r\n  messages: [\r\n/*     {id: 1, autor: 'Tom', message: 'Hi! Are you busy today?'},\r\n    {id: 2, autor: 'Me', message: 'Hi! I\\'ve free time in afternoon. What\\'s the matter?'},\r\n    {id: 3, autor: 'Tom', message: 'I want to talk with you.'},\r\n    {id: 4, autor: 'Me', message: 'OK, let\\'s meet at 6 o\\'clock?'}, */\r\n  ],\r\n  writingMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_MESSAGE: \r\n\r\n        let newMessage = state.writingMessageText;\r\n\r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, {id: 5, autor: 'Me', message: newMessage},],\r\n          writingMessageText: ''\r\n        }\r\n\r\n      case CHANGE_MESSAGE: \r\n\r\n        return {\r\n          ...state,\r\n          writingMessageText: action.text\r\n        }\r\n             \r\n      default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessage = () => {\r\n    return {\r\n      type: ADD_MESSAGE\r\n    }\r\n  }\r\n  \r\nexport const changeMessage = (text) => {\r\n    return {\r\n        type: CHANGE_MESSAGE,\r\n        text: text\r\n      }\r\n    }\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserBlock = (props) =>{\r\n\r\n    return(\r\n        <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>\r\n            <div className={s.userBlock}>\r\n                <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n                {props.name}\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default UserBlock;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst MessageBlock = (props) => {\r\n\r\n    return(\r\n        <div className={s.message}>\r\n            <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n            <div className={s.messageBlock}>\r\n                <h5 className={s.userName}>{props.autor}</h5>\r\n                <p className={s.messageText}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBlock;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport UserBlock from './UserBlock/UserBlock';\r\nimport MessageBlock from './MessageBlock/MessageBlock';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Dialogs = (props) => { \r\n\r\n    const onAddMessage = () => {        \r\n        props.addMessage();\r\n    }\r\n\r\n    const onChangeMessage = (event) => {\r\n        let writingText = event.target.value;\r\n        props.changeMessage(writingText);\r\n    }\r\n\r\n    return <>\r\n{/*         {!props.isAuth\r\n            ? <Redirect to='/login' />\r\n            \r\n            : */} <div className={s.dialogs}>\r\n                <div className={s.usersColumn}>\r\n\r\n                    {props.users.map(user => <UserBlock key={user.id} id={user.id} name={user.name} />)}\r\n\r\n                </div>\r\n                <div className={s.messagesColumn}>\r\n                    <div className={s.addMessage}>\r\n                        <textarea onChange={onChangeMessage} className={s.postField} value={props.writingMessageText} autoFocus placeholder=\" write your message here\" />\r\n                        <button onClick={onAddMessage}>Send message</button>\r\n                    </div>\r\n\r\n                    {props.messages.map(mes => <MessageBlock key={mes.id} autor={mes.autor} message={mes.message} />)}\r\n\r\n                </div>\r\n            </div>{/* } */}\r\n\r\n   </>\r\n}\r\n\r\nexport default Dialogs;","import { addMessage, changeMessage } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.dialogsPage.users,\r\n        messages: state.dialogsPage.messages,\r\n        writingMessageText: state.dialogsPage.writingMessageText,\r\n        /* isAuth: state.auth.isAuth */\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, {addMessage, changeMessage})(Dialogs);\r\n\r\nexport default DialogsContainer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\n    \r\nconst Paginator = (props) => {\r\n\r\n    let pages = [];\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    for(let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    /* --- */\r\n    let pagesRange = 10;\r\n    \r\n    //let currentRange = Math.ceil(props.currentPage / pagesRange);\r\n    const [currentRange, setCurrentRange] = useState(1);\r\n    let leftLimit = (currentRange - 1) * pagesRange + 1; //left limit of range\r\n    let rightLimit = currentRange * pagesRange; //right limit of range\r\n    /* --- */\r\n\r\n    let pagesPagination = pages\r\n        .filter(page => page >= leftLimit && page <= rightLimit)\r\n        .map(page => {\r\n            return <span key={page} \r\n            className={page === props.currentPage ? styles.selected : ''} \r\n            /* similar: className={page === props.currentPage && styles.selected}  */\r\n            onClick={ (e) => props.getCurrentUsers(page)}>{page}</span>\r\n    });\r\n\r\n    let ranges = Math.ceil(pagesCount / pagesRange);\r\n\r\n    return <div className={styles.pagination}>\r\n            {currentRange > 1 && <button className={styles.paginationNav} onClick={ () => setCurrentRange(currentRange - 1)}>&#60;&#60; PREW</button>}\r\n            {pagesPagination}\r\n            {currentRange < ranges && <button className={styles.paginationNav} onClick={ () => setCurrentRange(currentRange + 1)}>NEXT &gt;&gt;</button>}\r\n        </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userAvatarPlaceholder from '../../img/user_avatar_placeholder.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from './Paginator/Paginator';\r\n//import { setCurrentPage } from '../../redux/usersReducer';\r\n\r\nconst Users = (props) => {\r\n\r\n    let users = props.users.map(user => {\r\n\r\n        return (\r\n            <div key={user.id} className={styles.userItem}>\r\n                <NavLink to={\"profile/\" + user.id}>\r\n                    <div className={styles.avatar}>\r\n                        <img className={styles.userPhoto} alt=\"user-avatar\" src={user.photos.small !== null ? user.photos.small : userAvatarPlaceholder} />\r\n                    </div>\r\n                </NavLink>\r\n                <div className={styles.userInfo}>\r\n                    <div className={styles.mane}>{user.name}</div>\r\n                    <div className={styles.status}>{user.status}</div>                       \r\n                </div>\r\n                <div className={styles.friendBlock}>\r\n\r\n                    {user.followed ? \r\n                    <div className={styles.isFriend}>\r\n                        <span>friend</span>\r\n                        <button disabled={props.followProcessingUsers.some(uid => uid === user.id)} onClick={ () => {\r\n                            props.unfollow(user.id);\r\n                            /* props.toggleIsFollowProcessing(true, user.id);\r\n                            props.toggleIsFetching(true);\r\n\r\n                            usersAPI.unfollow(user.id)\r\n                            .then(response => {\r\n                                if(response.data.resultCode === 0) {\r\n                                    props.unfollow(user.id);\r\n                                }\r\n                                props.toggleIsFollowProcessing(false, user.id);\r\n                                props.toggleIsFetching(false);\r\n                            });  */\r\n\r\n                        } }>Unfollow</button></div> : \r\n\r\n                        <button className={styles.isFriend} \r\n                        disabled={props.followProcessingUsers.some(uid => uid === user.id)} onClick={ () => {\r\n                            props.follow(user.id);\r\n/*                             props.toggleIsFollowProcessing(true, user.id);\r\n                            props.toggleIsFetching(true);\r\n\r\n                            usersAPI.follow(user.id)\r\n                            .then(response => {\r\n                                if(response.data.resultCode === 0) {\r\n                                    props.follow(user.id);\r\n                                }\r\n                                props.toggleIsFollowProcessing(false, user.id);\r\n                                props.toggleIsFetching(false);\r\n                            });  */\r\n                            \r\n                        } }>Follow</button>}\r\n                </div>                   \r\n            </div>\r\n        )\r\n    });\r\n\r\n    return <>\r\n        <Paginator \r\n            totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            currentPage={props.currentPage}\r\n            getCurrentUsers={props.getCurrentUsers} />\r\n        <div className={styles.users}>{users}</div>\r\n    </>\r\n}\r\n\r\nexport default Users;","import { usersAPI } from \"../API/API\";\r\n\r\nconst LOAD_USERS = 'LOAD-USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOW_PROCESSING = 'TOGGLE-IS-FOLLOW-PROCESSING';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followProcessingUsers: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USERS:\r\n            return {\r\n                ...state, users: [ ...action.users]\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })             \r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOW_PROCESSING:\r\n            return {\r\n                ...state, \r\n                followProcessingUsers: action.isFetching \r\n                ? [...state.followProcessingUsers, action.userId] \r\n                : [state.followProcessingUsers.filter(uid => uid !== action.userId)] \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loadUsers = (users) => ({type: LOAD_USERS, users});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const followAction = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAction = (userId) => ({type: UNFOLLOW, userId});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching}); \r\nexport const toggleIsFollowProcessing = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOW_PROCESSING, isFetching, userId});\r\n\r\n/* thunks */\r\n\r\nexport const getUsers = (pageSize, currentPage) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(pageSize, currentPage)\r\n        .then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(loadUsers(data.items)); \r\n            dispatch(setCurrentPage(currentPage));  \r\n            dispatch(setTotalUsersCount(data.totalCount)); \r\n        });  \r\n    }\r\n} \r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowProcessing(true, userId));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n    usersAPI.follow(userId)\r\n    .then(response => {\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(followAction(userId));\r\n        }\r\n        dispatch(toggleIsFollowProcessing(false, userId));\r\n        dispatch(toggleIsFetching(false));\r\n    }); \r\n    } \r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowProcessing(true, userId));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n    usersAPI.unfollow(userId)\r\n    .then(response => {\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(unfollowAction(userId));\r\n        }\r\n        dispatch(toggleIsFollowProcessing(false, userId));\r\n        dispatch(toggleIsFetching(false));\r\n    }); \r\n    } \r\n}\r\n\r\nexport default usersReducer;","import React from 'react'; \r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../commom/Preloader/Preloader';\r\nimport { /* loadUsers, setTotalUsersCount, */ /* setCurrentPage, */ follow, unfollow, /* toggleIsFetching, toggleIsFollowProcessing, */ getUsers } from '../../redux/usersReducer';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.pageSize, this.props.currentPage);    \r\n    }\r\n\r\n    getCurrentUsers = (currentPage) => {\r\n        this.props.getUsers(this.props.pageSize, currentPage);    \r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            \r\n            <Users \r\n                users={this.props.users} \r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                isFetching={this.props.isFetching}\r\n                getCurrentUsers={this.getCurrentUsers}\r\n/*                 toggleIsFetching={this.props.toggleIsFetching}\r\n                toggleIsFollowProcessing={this.props.toggleIsFollowProcessing} */\r\n                followProcessingUsers={this.props.followProcessingUsers} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followProcessingUsers: state.usersPage.followProcessingUsers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, \r\n    {/* loadUsers, setTotalUsersCount, */ /* setCurrentPage, */ follow, unfollow, /* toggleIsFetching, toggleIsFollowProcessing, */ getUsers})(UsersContainer);","import React from 'react';\r\n//import s from './News.module.css';\r\n\r\n\r\nconst News = (props) => {\r\n    return <div>News</div>        \r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }      \r\n    }\r\n\r\n    const mapStateToPropsForRedirect = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport News from './News';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst NewsContainer = (props) => {\r\n\r\n    return <News />\r\n}\r\n\r\nexport default compose( connect(), withAuthRedirect )(NewsContainer);\r\n\r\n\r\n//const AuthRedirectComponent = withAuthRedirect(NewsContainer);\r\n\r\n//const mapDispatchToProps = (state) => ({ });\r\n\r\n//export default connect(null, {})(AuthRedirectComponent);","import React from 'react';\r\nimport styles from './MainHeader.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport authUserAvatarPlaceholder from '../../img/user_avatar_placeholder.png';\r\n\r\n\r\nconst MainHeader = (props) => {\r\n\r\n    return <div className={styles.mineHeader}>\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.authBlock}>\r\n                <span className={styles.userName}>{props.isAuth ? props.login : <NavLink to=\"/login\">Login</NavLink>}</span>\r\n                <img className={styles.avatar} src={props.authUserAvatar ? props.authUserAvatar : authUserAvatarPlaceholder} alt=\"autorized user avatar\" />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MainHeader;","import { profileAPI, authAPI } from \"../API/API\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET-AUTH-USER-DATA';\r\nconst SET_AUTH_USER_AVATAR = 'SET-AUTH-USER-AVATAR';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    authorizedUserAvatar: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state, \r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        case SET_AUTH_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                authUserAvatar: action.authUserAvatar\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email) => ({type: SET_AUTH_USER_DATA, data: {userId, login, email}});\r\nexport const setAuthUserAvatar = (authUserAvatar) => ({type: SET_AUTH_USER_AVATAR, authUserAvatar});\r\n\r\n/* thunks */\r\n\r\nexport const setAuthMeData = () => {\r\n    return (dispatch) => {\r\n        authAPI.getAuthMeData()\r\n        .then(response => {\r\n            if(response.data.resultCode === 0) {  \r\n                let {id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, login, email));\r\n            }          \r\n        });\r\n    }\r\n}\r\n\r\nexport const getProfile = (id) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(id)\r\n        .then(response => {\r\n            let authUserAvatar = response.data.photos.small;\r\n            dispatch(setAuthUserAvatar(authUserAvatar));\r\n        });\r\n    }\r\n}\r\n\r\nexport const sendAuthUserData = (loginFormData) => {\r\n   \r\n        authAPI.sendAuthData(loginFormData);\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport MainHeader from './MainHeader';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthMeData, getProfile } from '../../redux/authReducer';\r\n\r\n\r\nclass MainHeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.setAuthMeData();\r\n\r\n        this.props.getProfile(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        return <MainHeader {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n    authUserAvatar: state.auth.authUserAvatar\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAuthMeData, getProfile})(MainHeaderContainer);","import React from 'react';\r\nimport mainPicture from '../../img/main.jpg';\r\n\r\nconst Main = () => {\r\n\r\n    return <>\r\n            <img src={mainPicture} alt=\"main\" />\r\n        </>\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { sendAuthUserData/* , setAuthMeData */ } from '../../redux/authReducer';\r\n\r\nconst LoginForm = props => {\r\n  const { handleSubmit } = props;\r\n  return <form  onSubmit={handleSubmit}>\r\n    <div>\r\n      <label htmlFor=\"inputEmail\">Email:</label>\r\n      <Field name=\"inputEmail\" component=\"input\" type=\"email\" placeholder=\"your email\" />\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"inputPassword\">Password:</label>\r\n      <Field name=\"inputPassword\" component=\"input\" type=\"password\" placeholder=\"password\" />\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"rememberMe\">Remember me</label>\r\n      <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">Login</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = props => {\r\n\r\n  let onSubmit = loginFormData => {\r\n    sendAuthUserData(loginFormData);\r\n    //setAuthMeData();\r\n  }   \r\n  return <div className={styles.loginPage}>\r\n      <div className={styles.modalWindow}>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n      </div>          \r\n    </div>\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n//import s from './Music.module.css';\r\n\r\n\r\nconst Music = (props) => {\r\n\r\n    return <div>Music</div>      \r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Music from './Music';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst MusicContainer = (props) => {\r\n\r\n    return <Music />\r\n}\r\n\r\nexport default compose( connect(),  withAuthRedirect )(MusicContainer);\r\n\r\n//const AuthRedirectContainer = withAuthRedirect(MusicContainer);\r\n\r\n//let mapStateToProps = (state) => ({ });\r\n\r\n//export default connect(null, {})(AuthRedirectContainer);","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n\r\n    return <div>Settings</div>    \r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Settings from './Settings';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst SettingsContainer = (props) => {\r\n\r\n    return <Settings />\r\n}\r\n\r\nexport default compose( connect(), withAuthRedirect )(SettingsContainer);\r\n\r\n//const AuthRedirectComponent = withAuthRedirect(SettingsContainer);\r\n\r\n//const mapDispatchToProps = (state) => ({ });\r\n\r\n//export default connect(null, {})(AuthRedirectComponent);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport SidebarContainer from './components/Sidebar/SidebarContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport NewsContainer from './components/News/NewsContainer';\r\nimport MainHeaderContainer from './components/MainHeader/MainHeaderContainer';\r\nimport Main from './components/Main/Main';\r\nimport Login from './components/Login/Login';\r\nimport MusicContainer from './components/Music/MusicContainer';\r\nimport SettingsContainer from './components/Settings/SettingsContainer';\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className='app'>\r\n        <MainHeaderContainer />\r\n      <div className='wrapper'>            \r\n          <SidebarContainer />       \r\n        <div className='contentBlock'>\r\n\r\n          <Route exact path='/' render={ () => <Main />} />\r\n\r\n          <Route path='/profile/:userId?' render={ () => <ProfileContainer />} />\r\n          <Route path=\"/users\" render={ () => <UsersContainer />} />\r\n \r\n          <Route exact path='/dialogs' render={ () => <DialogsContainer />} />\r\n\r\n          <Route path='/news' render={ () => <NewsContainer />} />\r\n          <Route path='/music' render={ () => <MusicContainer />} />\r\n          <Route path='/settings' render={ () => <SettingsContainer />} />\r\n          <Route path='/login' render={ () => <Login /> } />\r\n\r\n        </div> \r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'James', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 2, name: 'Kirk', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 3, name: 'Lars', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 4, name: 'Robert', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n      ],\r\n      menu: [\r\n        {link: '/profile', page: 'Profile'},       \r\n        {link: '/dialogs', page: 'Dialogs'},\r\n        {link: '/users', page: 'Users'},\r\n        {link: '/news', page: 'News'},\r\n        {link: '/music', page: 'Music'},\r\n      ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer'\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nconst renderAll = (state) => {\r\n\r\n    ReactDOM.render(\r\n      <BrowserRouter basename=\"/soc-net\">\r\n      {/* <React.StrictMode> */}\r\n        \r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        \r\n      {/* </React.StrictMode> */}\r\n      </BrowserRouter>,\r\n      document.getElementById('root')\r\n    );\r\n  }\r\n\r\n\r\nrenderAll(store.getState()); //first rendering\r\n//and now we need state and we are getting it by\r\n//calling getState()\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  renderAll(state);\r\n});\r\n//subscribe(renderAll); //\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCover\":\"Profile_profileCover__1dBma\",\"profilePhoto\":\"Profile_profilePhoto__1KJE5\",\"profileStatus\":\"Profile_profileStatus__2fNLQ\",\"lookingForAJob\":\"Profile_lookingForAJob__2c2Z_\",\"lookingForAJobDescription\":\"Profile_lookingForAJobDescription__2s7T9\",\"jobLooking\":\"Profile_jobLooking__1Sq13\",\"inputStatus\":\"Profile_inputStatus__2dj2r\"};","module.exports = __webpack_public_path__ + \"static/media/user_avatar_placeholder.8d17db1b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2qBGc\",\"active\":\"Sidebar_active__2RE7F\",\"bold\":\"Sidebar_bold__1Fufz\",\"friend\":\"Sidebar_friend__1rhVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Post_postBlock__e2YHy\",\"ava\":\"Post_ava__gqrft\",\"likes\":\"Post_likes__3O-6y\",\"post\":\"Post_post__2oinp\",\"postText\":\"Post_postText__o98dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mineHeader\":\"MainHeader_mineHeader__FN-S1\",\"wrapper\":\"MainHeader_wrapper__10pp0\",\"authBlock\":\"MainHeader_authBlock__3MKYN\",\"userName\":\"MainHeader_userName__olMeq\",\"avatar\":\"MainHeader_avatar__17XqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__aJZTH\",\"selected\":\"Paginator_selected__zhO9i\",\"paginationNav\":\"Paginator_paginationNav__1pATz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__34Xgw\",\"circular\":\"Preloader_circular__2wtNH\",\"rotate\":\"Preloader_rotate__3JteC\",\"path\":\"Preloader_path__2VkDZ\",\"dash\":\"Preloader_dash__2ls1X\",\"color\":\"Preloader_color__3OYLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendName\":\"Friend_friendName__2oLor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__3a8_M\",\"modalWindow\":\"Login_modalWindow__uhoiX\"};"],"sourceRoot":""}