{"version":3,"sources":["components/Users/Users.module.css","components/Sidebar/Sidebar.module.css","components/Profile/ProfileHeader/ProfileHeader.module.css","components/Profile/PostsTape/Post/Post.module.css","img/user_avatar.png","components/commom/Preloader/Preloader.module.css","components/MainHeader/MainHeader.module.css","components/Sidebar/Friends/Friend.module.css","components/Dialogs/Dialogs.module.css","img/looking_job.svg","img/not_looking_job.svg","components/Profile/PostsTape/PostsTape.module.css","components/Sidebar/Friends/Friend.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/commom/Preloader/Preloader.js","components/Profile/ProfileHeader/ProfileHeader.js","components/Profile/PostsTape/Post/Post.js","components/Profile/PostsTape/PostsTape.js","redux/profileReducer.js","components/Profile/PostsTape/PostsTapeContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/dialogsReducer.js","components/Dialogs/UserBlock/UserBlock.js","components/Dialogs/MessageBlock/MessageBlock.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","components/Users/Users.js","redux/usersReducer.js","components/Users/UsersContainer.js","components/News/News.js","components/Settings/Settings.js","components/Music/Music.js","components/MainHeader/MainHeader.js","redux/authReducer.js","components/MainHeader/MainHeaderContainer.js","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/reduxStore.js","index.js"],"names":["module","exports","Friend","props","className","s","ava","src","avatarLink","alt","name","friendName","Sidebar","friends","map","friend","key","id","menu","page","to","link","activeClassName","active","sidebar","bold","SidebarContainer","connect","state","dispatch","Preloader","styles","loader","circular","viewBox","path","cx","cy","r","fill","strokeWidth","strokeMiterlimit","ProfileHeader","profile","profileCover","profilePhoto","photos","small","userAvatar","userId","profileStatus","aboutMe","lookingForAJob","jobLooking","looking","notLooking","lookingForAJobDescription","Post","postBlock","likes","post","postText","PostsTape","addPost","onChange","event","changedText","target","value","changePostText","writingPostText","placeholder","onClick","posts","likesCount","initialState","userProfile","profileReducer","action","type","text","PostsTapeContainer","profilePage","changePostActionCreator","Profile","ProfileContainer","this","match","params","axios","then","response","getUserProfile","data","React","Component","WithUrlDataContainerComponent","withRouter","users","messages","autor","message","writingMessageText","dialogsReducer","newMessage","UserBlock","userBlock","MessageBlock","messageBlock","userName","messageText","Dialogs","dialogs","usersColumn","user","messagesColumn","addMessage","writingText","changeMessage","postField","mes","DialogsContainer","dialogsPage","changeMessageActionCreator","Users","pages","pagesCount","Math","ceil","totalUsersCount","pageSize","i","push","pagesPagination","currentPage","selected","e","getCurrentUsers","userItem","avatar","userPhoto","userInfo","mane","status","friendBlock","followed","isFriend","unfollow","follow","pagination","isFetching","usersReducer","UsersAPIContainer","toggleIsFetching","setCurrentPage","loadUsers","items","setTotalUsersCount","totalCount","UsersContainer","usersPage","News","Settings","Music","MainHeader","mineHeader","wrapper","login","email","isAuth","authReducer","MainHeaderContainer","withCredentials","resultCode","setAuthUserData","auth","App","exact","render","Boolean","window","location","hostname","sidebarReducer","reducers","combineReducers","store","createStore","getState","renderAll","ReactDOM","StrictMode","basename","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ac76c425.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"Users_userItem__w_zBd\",\"pagination\":\"Users_pagination__2DznN\",\"selected\":\"Users_selected__1vP1R\",\"avatar\":\"Users_avatar__1CqdD\",\"userPhoto\":\"Users_userPhoto__QbFi6\",\"userInfo\":\"Users_userInfo__nWu7K\",\"mane\":\"Users_mane__2nM4t\",\"status\":\"Users_status__1vc8V\",\"friendBlock\":\"Users_friendBlock__1LrKI\",\"isFriend\":\"Users_isFriend__2lZGL\",\"preloaderVisible\":\"Users_preloaderVisible__1ogTI\",\"preloaderUnvisible\":\"Users_preloaderUnvisible__s24VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2qBGc\",\"active\":\"Sidebar_active__2RE7F\",\"bold\":\"Sidebar_bold__1Fufz\",\"friend\":\"Sidebar_friend__1rhVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCover\":\"ProfileHeader_profileCover__ppy09\",\"profilePhoto\":\"ProfileHeader_profilePhoto__2hv0o\",\"profileStatus\":\"ProfileHeader_profileStatus__1-ISZ\",\"lookingForAJob\":\"ProfileHeader_lookingForAJob__2Os1Y\",\"lookingForAJobDescription\":\"ProfileHeader_lookingForAJobDescription__20x2w\",\"jobLooking\":\"ProfileHeader_jobLooking__3XoIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Post_postBlock__e2YHy\",\"ava\":\"Post_ava__gqrft\",\"likes\":\"Post_likes__3O-6y\",\"post\":\"Post_post__2oinp\",\"postText\":\"Post_postText__o98dr\"};","module.exports = __webpack_public_path__ + \"static/media/user_avatar.8d17db1b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__34Xgw\",\"circular\":\"Preloader_circular__2wtNH\",\"rotate\":\"Preloader_rotate__3JteC\",\"path\":\"Preloader_path__2VkDZ\",\"dash\":\"Preloader_dash__2ls1X\",\"color\":\"Preloader_color__3OYLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mineHeader\":\"MainHeader_mineHeader__FN-S1\",\"wrapper\":\"MainHeader_wrapper__10pp0\",\"authBlock\":\"MainHeader_authBlock__3MKYN\",\"userName\":\"MainHeader_userName__olMeq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendName\":\"Friend_friendName__2oLor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Xpin\",\"userBlock\":\"Dialogs_userBlock__3ZjkJ\",\"ava\":\"Dialogs_ava__3ZQ4t\",\"active\":\"Dialogs_active__nkuLR\",\"addMessage\":\"Dialogs_addMessage__3-lJG\",\"postField\":\"Dialogs_postField__33IBz\",\"messagesColumn\":\"Dialogs_messagesColumn__290kT\",\"message\":\"Dialogs_message__3lbky\",\"messageBlock\":\"Dialogs_messageBlock__3wHy1\",\"userName\":\"Dialogs_userName__wYCxL\",\"messageText\":\"Dialogs_messageText__3nLSN\"};","module.exports = __webpack_public_path__ + \"static/media/looking_job.0c569380.svg\";","module.exports = __webpack_public_path__ + \"static/media/not_looking_job.d0c709f2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"PostsTape_addPost__31cbv\"};","import React, { Fragment } from 'react';\r\nimport s from './Friend.module.css';\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <img className={s.ava} src={props.avatarLink} alt={`${props.name}'s avatar`} />\r\n            <span className={s.friendName}>{props.name}</span>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\nimport Friend from './Friends/Friend';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let friends = props.friends.map(friend => {\r\n\r\n        return(\r\n            <div key={friend.id} className={s.friend}><Friend name={friend.name} avatarLink={friend.avatarLink} /></div>\r\n        )\r\n    });\r\n\r\n    let menu = props.menu.map(page => {\r\n        return(\r\n            <li key={page.page}><NavLink to={page.link} activeClassName={s.active}>{page.page}</NavLink></li>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <nav className={s.sidebar}>\r\n            <ul>\r\n                {menu}\r\n                <li className={s.bold}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></li>\r\n            </ul>\r\n\r\n            <div>\r\n                <ul>\r\n                    <li className={s.bold}><NavLink to=\"/friends\" activeClassName={s.active}>My friends</NavLink></li>\r\n                </ul>\r\n                {friends}             \r\n            </div>\r\n        </nav>\r\n    );\r\n    \r\n}\r\n\r\nexport default Sidebar;","import Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n/* const SidebarContainer = (props) => {\r\n    return(\r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n\r\n                let state = store.getState();\r\n\r\n                return <Sidebar friends={state.sidebar.friends} menu={state.sidebar.menu} />\r\n            }}\r\n        </StoreContext.Consumer>\r\n    )\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends,\r\n        menu: state.sidebar.menu\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n\r\n    return <div className={styles.loader}>\r\n        <svg className={styles.circular} viewBox=\"25 25 50 50\">\r\n            <circle className={styles.path} cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\r\n        </svg>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './ProfileHeader.module.css';\r\nimport Preloader from '../../commom/Preloader/Preloader';\r\nimport looking from '../../../img/looking_job.svg';\r\nimport notLooking from '../../../img/not_looking_job.svg';\r\nimport userAvatar from '../../../img/user_avatar.png';\r\n\r\n\r\nconst ProfileHeader = (props) => {\r\n\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return <>\r\n        <div className={styles.profileCover}>\r\n            <img src=\"https://img.turne.com.ua/static/countries/c42/small/42_637145319768924795.jpg\" alt=\"czech\" />\r\n            <img className={styles.profilePhoto} src={!props.profile.photos.small ? userAvatar : props.profile.photos.small} alt={'user ' + props.profile.userId + ' photo'} />\r\n        </div>\r\n\r\n        <div className={styles.profileStatus}>{props.profile.aboutMe}</div>\r\n        <div className={styles.lookingForAJob}>\r\n            <span>Is looking for a job:</span><img className={styles.jobLooking} src={props.profile.lookingForAJob === true ? looking : notLooking} alt='looking for a job' />\r\n        </div>\r\n        <div className={styles.lookingForAJobDescription}>{props.profile.lookingForAJobDescription}</div>\r\n    </>\r\n}\r\n\r\nexport default ProfileHeader;\r\n\r\n","import React from 'react';\r\nimport s from'./Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className={s.postBlock}>\r\n            <div className={s.ava}>\r\n                <img src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"user avatar\" />\r\n                <span className={s.likes}>Likes: {props.likes}</span>\r\n            </div>\r\n            <div className={s.post}>\r\n                <p className={s.postText}>{props.post}</p>\r\n            </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './PostsTape.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst PostsTape = (props) => {\r\n    const onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    const changePostText = (event) => {\r\n        let changedText = event.target.value;\r\n        props.changePostText(changedText);\r\n    }    \r\n\r\n    return <>\r\n            <div className={s.addPost}>\r\n                <textarea onChange={changePostText} value={props.writingPostText} placeholder=\" create your new post\" />\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div>\r\n\r\n            {props.posts.map(post => {\r\n                return <Post key={post.id} post={post.postText} likes={post.likesCount} />\r\n            })}\r\n    </>  \r\n}\r\n\r\nexport default PostsTape;","const ADD_POST = 'ADD-POST';\r\nconst CHANGE_POST = 'CHANGE-POST';\r\nconst GET_USER_PROFILE = 'GET-USER-PROFILE';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, postText: 'Hi there!', likesCount: 10},\r\n    {id: 2, postText: 'It\\'s my new post.', likesCount: 25765},\r\n  ],\r\n  writingPostText: '',\r\n  userProfile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_POST: \r\n      let text = state.writingPostText;\r\n\r\n        return {\r\n          ...state,\r\n          posts: [ ...state.posts, {id: 3, postText: text, likesCount: 0} ],\r\n          writingPostText: ''\r\n        }\r\n      \r\n      case CHANGE_POST:      \r\n        return {\r\n          ...state, writingPostText: action.text\r\n        }\r\n\r\n      case GET_USER_PROFILE:\r\n        return {\r\n          ...state, userProfile: action.userProfile\r\n        }\r\n      \r\n      default: \r\n        return state;\r\n      \r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const changePostActionCreator = (text) => ({ type: CHANGE_POST, text });\r\nexport const getUserProfile = (userProfile) => ({ type: GET_USER_PROFILE, userProfile });\r\n\r\nexport default profileReducer;","import PostsTape from './PostsTape';\r\nimport { addPostActionCreator, changePostActionCreator } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        writingPostText: state.profilePage.writingPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        changePostText: (text) => {\r\n            dispatch(changePostActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsTapeContainer = connect(mapStateToProps, mapDispatchToProps)(PostsTape);\r\n\r\nexport default PostsTapeContainer;","import React from 'react';\r\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\r\nimport PostsTapeContainer from './PostsTape/PostsTapeContainer';\r\n\r\nconst Profile = (props) => {\r\n    \r\n        return <>\r\n                <header>\r\n                    <ProfileHeader profile={props.profile} />\r\n                </header>\r\n                <main>\r\n                    <PostsTapeContainer />  \r\n                </main>             \r\n            </>  \r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n     \r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = 2;\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`) \r\n        .then(response => {\r\n            this.props.getUserProfile(response.data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.userProfile} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile\r\n});\r\n\r\nconst WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst CHANGE_MESSAGE = 'CHANGE-MESSAGE';\r\n\r\nlet initialState = {\r\n  users: [\r\n    {id: 1, name: 'Tom'},\r\n    {id: 2, name: 'Helen'},\r\n    {id: 3, name: 'Sarah'},\r\n    {id: 4, name: 'George'},\r\n  ],\r\n  messages: [\r\n    {id: 1, autor: 'Tom', message: 'Hi! Are you busy today?'},\r\n    {id: 2, autor: 'Me', message: 'Hi! I\\'ve free time in afternoon. What\\'s the matter?'},\r\n    {id: 3, autor: 'Tom', message: 'I want to talk with you.'},\r\n    {id: 4, autor: 'Me', message: 'OK, let\\'s meet at 6 o\\'clock?'},\r\n  ],\r\n  writingMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_MESSAGE: \r\n\r\n        let newMessage = state.writingMessageText;\r\n\r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, {id: 5, autor: 'Me', message: newMessage},],\r\n          writingMessageText: ''\r\n        }\r\n\r\n      case CHANGE_MESSAGE: \r\n\r\n        return {\r\n          ...state,\r\n          writingMessageText: action.text\r\n        }\r\n             \r\n      default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessageActionCreator = () => {\r\n    return {\r\n      type: ADD_MESSAGE\r\n    }\r\n  }\r\n  \r\nexport const changeMessageActionCreator = (text) => {\r\n    return {\r\n        type: CHANGE_MESSAGE,\r\n        text: text\r\n      }\r\n    }\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserBlock = (props) =>{\r\n\r\n    return(\r\n        <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>\r\n            <div className={s.userBlock}>\r\n                <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n                {props.name}\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default UserBlock;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst MessageBlock = (props) => {\r\n\r\n    return(\r\n        <div className={s.message}>\r\n            <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n            <div className={s.messageBlock}>\r\n                <h5 className={s.userName}>{props.autor}</h5>\r\n                <p className={s.messageText}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBlock;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport UserBlock from './UserBlock/UserBlock';\r\nimport MessageBlock from './MessageBlock/MessageBlock';\r\n\r\n\r\nconst Dialogs = (props) => { \r\n\r\n    const onAddMessage = () => {        \r\n        props.addMessage();\r\n    }\r\n\r\n    const onChangeMessage = (event) => {\r\n        let writingText = event.target.value;\r\n        props.changeMessage(writingText);\r\n    }\r\n\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.usersColumn}>\r\n\r\n                {props.users.map(user => <UserBlock key={user.id} id={user.id} name={user.name} />)}\r\n\r\n            </div>\r\n            <div className={s.messagesColumn}>\r\n                <div className={s.addMessage}>\r\n                    <textarea onChange={onChangeMessage} className={s.postField} value={props.writingMessageText} placeholder=\" write your message here\" />\r\n                    <button onClick={onAddMessage}>Send message</button>\r\n                </div>\r\n\r\n                {props.messages.map(mes => <MessageBlock key={mes.id} autor={mes.autor} message={mes.message} />)}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { addMessageActionCreator, changeMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n/* const DialogsContainer = (props) => { \r\n\r\n    return( \r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n                 let state = store.getState();\r\n\r\n                 let addMessage = () => {        \r\n                    store.dispatch(addMessageActionCreator());\r\n                }\r\n            \r\n                const changeMessage = (text) => {\r\n                    store.dispatch(changeMessageActionCreator(text));\r\n                }\r\n\r\n                return(\r\n                    <Dialogs addMessage={addMessage} changeMessage={changeMessage} users={state.dialogsPage.users} messages={state.dialogsPage.messages} writingMessageText={state.dialogsPage.writingMessageText} />\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n        )\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.dialogsPage.users,\r\n        messages: state.dialogsPage.messages,\r\n        writingMessageText: state.dialogsPage.writingMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {        \r\n            dispatch(addMessageActionCreator());\r\n        },\r\n        changeMessage: (text) => {\r\n            dispatch(changeMessageActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userAvatar from '../../img/user_avatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Users = (props) => {\r\n\r\n    let pages = [];\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    for(let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let pagesPagination = pages.map(page => {\r\n        return <span key={page} className={props.currentPage === page && styles.selected} \r\n        onClick={ (e) => props.getCurrentUsers(page)}>{page}</span>\r\n    });\r\n\r\n    let users = props.users.map(user => {\r\n        return (\r\n            <div key={user.id} className={styles.userItem}>\r\n                <NavLink to={\"profile/\" + user.id}>\r\n                    <div className={styles.avatar}>\r\n                        <img className={styles.userPhoto} alt=\"user-avatar\" src={user.photos.small !== null ? user.photos.small : userAvatar} />\r\n                    </div>\r\n                </NavLink>\r\n                <div className={styles.userInfo}>\r\n                    <div className={styles.mane}>{user.name}</div>\r\n                    <div className={styles.status}>{user.status}</div>                       \r\n                </div>\r\n                <div className={styles.friendBlock}>\r\n                    {user.followed === true ? \r\n                    <div className={styles.isFriend}><span>friend</span><button onClick={ () => {\r\n                    props.unfollow(user.id)} }>Unfollow</button></div> : <button className={styles.isFriend} onClick={ () => {props.follow(user.id)} }>Follow</button>}\r\n                </div>                   \r\n            </div>\r\n        )\r\n    });\r\n\r\n    return <>\r\n    <div className={styles.pagination}>\r\n        {pagesPagination}\r\n    </div>\r\n    <div className={styles.users}>\r\n        {users}\r\n    </div>\r\n</>\r\n}\r\n\r\nexport default Users;","const LOAD_USERS = 'LOAD-USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    isFetching: false\r\n}\r\n\r\nexport const loadUsers = (users) => ({type: LOAD_USERS, users});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching}); \r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USERS:\r\n            return {\r\n                ...state, users: [ ...action.users]\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })             \r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return { ...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../commom/Preloader/Preloader';\r\nimport { loadUsers, setTotalUsersCount, setCurrentPage, follow, unfollow, toggleIsFetching } from '../../redux/usersReducer';\r\n\r\n\r\nclass UsersAPIContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${this.props.currentPage}`)\r\n        .then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.loadUsers(response.data.items);   \r\n            this.props.setTotalUsersCount(response.data.totalCount); \r\n        });        \r\n    }\r\n\r\n    getCurrentUsers = (currentPage) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(currentPage);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${currentPage}`) \r\n        .then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.loadUsers(response.data.items);\r\n        });          \r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching === true ? <Preloader /> : null}\r\n            \r\n            <Users \r\n                users={this.props.users} \r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                getCurrentUsers={this.getCurrentUsers} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps, \r\n    {loadUsers, setTotalUsersCount, setCurrentPage, follow, unfollow, toggleIsFetching})(UsersAPIContainer);\r\n\r\nexport default UsersContainer;","import React from 'react';\r\n//import s from './News.module.css';\r\n\r\n\r\nclass News extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>News</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\n\r\nclass Settings extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>Settings</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\n//import s from './Music.module.css';\r\n\r\n\r\nclass Music extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>Music</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './MainHeader.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst MainHeader = (props) => {\r\n\r\n    return <div className={styles.mineHeader}>\r\n        <div className={styles.wrapper}>\r\n            {/* <div className={styles.authBlock}> */}\r\n                <NavLink className={styles.userName} to=\"/login\">Login</NavLink>\r\n            {/* </div> */}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MainHeader;","const SET_AUTH_USER_DATA = 'SET-AUTH-USER-DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            debugger;\r\n            return {\r\n                ...state, \r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email) => ({type: SET_AUTH_USER_DATA, data: {userId, login, email}});\r\n//export const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching}); \r\n\r\nexport default authReducer;","import React from 'react';\r\nimport * as axios from 'axios';\r\nimport MainHeader from './MainHeader';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthUserData } from '../../redux/authReducer';\r\n\r\nclass MainHeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get('https://social-network.samuraijs.com/api/1.0/auth/me', {withCredentials: true})\r\n        .then(response => {\r\n            debugger;\r\n            if(response.data.resultCode === 0) {  \r\n                let {id, login, email} = response.data.data;\r\n                this.props.setAuthUserData(id, login, email);\r\n            }          \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <MainHeader {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData})(MainHeaderContainer);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport SidebarContainer from './components/Sidebar/SidebarContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport Music from './components/Music/Music';\r\nimport MainHeaderContainer from './components/MainHeader/MainHeaderContainer';\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className='app'>\r\n        <MainHeaderContainer />\r\n      <div className='wrapper'>            \r\n          <SidebarContainer />       \r\n        <div className='contentBlock'>\r\n\r\n          <Route exact path='/' render={ () => <Redirect to='/profile' />} />\r\n\r\n          <Route path='/profile/:userId?' render={ () => <ProfileContainer />} />\r\n          <Route exact path=\"/users\" render={ () => <UsersContainer />} />\r\n \r\n          <Route exact path='/dialogs' render={ () => <DialogsContainer />} />\r\n\r\n          <Route path='/news' render={ () => <News />} />\r\n          <Route path='/music' render={ () => <Music />} />\r\n          <Route path='/settings' render={ () => <Settings />} />\r\n\r\n        </div> \r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'James', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 2, name: 'Kirk', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 3, name: 'Lars', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 4, name: 'Robert', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n      ],\r\n      menu: [\r\n        {link: '/profile', page: 'Profile'},       \r\n        {link: '/dialogs', page: 'Dialogs'},\r\n        {link: '/users', page: 'Users'},\r\n        {link: '/news', page: 'News'},\r\n        {link: '/music', page: 'Music'},\r\n      ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer'\r\nimport authReducer from './authReducer';\r\n\r\nconst reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nwindow.state = store.getState();\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nconst renderAll = (state) => {\r\n\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <BrowserRouter  basename=\"/soc-net\">\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        </BrowserRouter>\r\n      </React.StrictMode>,\r\n      document.getElementById('root')\r\n    );\r\n  }\r\n\r\n\r\nrenderAll(store.getState()); //first rendering\r\n//and now we need state and we are getting it by\r\n//calling getState()\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  renderAll(state);\r\n});\r\n//subscribe(renderAll); //\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}