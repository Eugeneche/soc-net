{"version":3,"sources":["components/Sidebar/Sidebar.module.css","components/Profile/PostsTape/Post/Post.module.css","components/Sidebar/Friends/Friend.module.css","components/Profile/PostsTape/PostsTape.module.css","components/MainHeader/MainHeader.module.css","components/Dialogs/Dialogs.module.css","components/MainHeader/MainHeader.js","components/Sidebar/Friends/Friend.js","components/Sidebar/Sidebar.js","StoreContext.js","components/Sidebar/SidebarContainer.js","components/Profile/Header/Header.js","components/Profile/PostsTape/Post/Post.js","components/Profile/PostsTape/PostsTape.js","redux/profileReducer.js","components/Profile/PostsTape/PostsTapeContainer.js","components/Profile/Profile.js","redux/dialogsReducer.js","components/Dialogs/UserBlock/UserBlock.js","components/Dialogs/MessageBlock/MessageBlock.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","components/News/News.js","components/Settings/Settings.js","components/Music/Music.js","components/Main/Main.js","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/reduxStore.js","index.js"],"names":["module","exports","MainHeader","className","s","mineHeader","React","Component","Friend","props","ava","src","avatarLink","alt","name","friendName","Sidebar","friends","map","friend","key","id","menu","page","to","link","activeClassName","active","sidebar","bold","StoreContext","createContext","Provider","value","store","children","SidebarContainer","Consumer","state","getState","Header","Post","postBlock","likes","this","post","postText","PostsTape","posts","addPost","onChange","event","changedText","target","changePostText","writingPostText","placeholder","onClick","likesCount","initialState","profileReducer","action","type","newPost","likeCount","push","text","PostsTapeContainer","dispatch","changePostActionCreator","profilePage","Profile","users","messages","autor","message","writingMessageText","dialogsReducer","newMessage","UserBlock","userBlock","MessageBlock","messageBlock","userName","messageText","Dialogs","dialogs","usersColumn","user","messagesColumn","addMessage","writingText","changeMessage","postField","mes","DialogsContainer","changeMessageActionCreator","dialogsPage","News","Settings","Music","Main","App","exact","path","component","render","Boolean","window","location","hostname","match","sidebarReducer","reducers","combineReducers","createStore","renderAll","ReactDOM","StrictMode","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.bf418aca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2qBGc\",\"active\":\"Sidebar_active__2RE7F\",\"bold\":\"Sidebar_bold__1Fufz\",\"friend\":\"Sidebar_friend__1rhVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Post_postBlock__e2YHy\",\"ava\":\"Post_ava__gqrft\",\"likes\":\"Post_likes__3O-6y\",\"post\":\"Post_post__2oinp\",\"postText\":\"Post_postText__o98dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendName\":\"Friend_friendName__2oLor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"PostsTape_addPost__31cbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mineHeader\":\"MainHeader_mineHeader__FN-S1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Xpin\",\"userBlock\":\"Dialogs_userBlock__3ZjkJ\",\"ava\":\"Dialogs_ava__3ZQ4t\",\"active\":\"Dialogs_active__nkuLR\",\"addMessage\":\"Dialogs_addMessage__3-lJG\",\"postField\":\"Dialogs_postField__33IBz\",\"messagesColumn\":\"Dialogs_messagesColumn__290kT\",\"message\":\"Dialogs_message__3lbky\",\"messageBlock\":\"Dialogs_messageBlock__3wHy1\",\"userName\":\"Dialogs_userName__wYCxL\",\"messageText\":\"Dialogs_messageText__3nLSN\"};","import React from 'react';\r\nimport s from './MainHeader.module.css';\r\n\r\n\r\nclass MainHeader extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className={s.mineHeader}>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainHeader;","import React, { Fragment } from 'react';\r\nimport s from './Friend.module.css';\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <img className={s.ava} src={props.avatarLink} alt={`${props.name}'s avatar`} />\r\n            <span className={s.friendName}>{props.name}</span>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\nimport Friend from './Friends/Friend';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let friends = props.friends.map(friend => {\r\n\r\n        return(\r\n            <div key={friend.id} className={s.friend}><Friend name={friend.name} avatarLink={friend.avatarLink} /></div>\r\n        )\r\n    });\r\n\r\n    let menu = props.menu.map(page => {\r\n        return(\r\n            <li key={page.page}><NavLink to={page.link} activeClassName={s.active}>{page.page}</NavLink></li>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <nav className={s.sidebar}>\r\n            <ul>\r\n                {menu}\r\n                <li className={s.bold}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></li>\r\n            </ul>\r\n\r\n            <div>\r\n                <ul>\r\n                    <li className={s.bold}><NavLink to=\"/friends\" activeClassName={s.active}>My friends</NavLink></li>\r\n                </ul>\r\n                {friends}             \r\n            </div>\r\n        </nav>\r\n    );\r\n    \r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\n\r\nconst StoreContext = React.createContext(null);\r\n\r\nexport const Provider = (props) => {\r\n    return(\r\n    <StoreContext.Provider value={props.store}>\r\n        {props.children}\r\n    </StoreContext.Provider>\r\n    )\r\n}\r\n\r\nexport default StoreContext;","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport StoreContext from '../../StoreContext';\r\n\r\n\r\nconst SidebarContainer = (props) => {\r\n    return(\r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n\r\n                let state = store.getState();\r\n\r\n                return <Sidebar friends={state.sidebar.friends} menu={state.sidebar.menu} />\r\n            }}\r\n        </StoreContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default SidebarContainer;","import React from 'react';\r\nimport './Header.css';\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"header\">\r\n                <img src=\"https://img.turne.com.ua/static/countries/c42/small/42_637145319768924795.jpg\" alt=\"czech\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport s from'./Post.module.css';\r\n\r\nclass Post extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className={s.postBlock}>\r\n                <div className={s.ava}>\r\n                    <img src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"user avatar\" />\r\n                    <span className={s.likes}>Likes: {this.props.likes}</span>\r\n                </div>\r\n                <div className={s.post}>\r\n                    <p className={s.postText}>{this.props.post}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './PostsTape.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst PostsTape = (props) => {\r\n    \r\n    const onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    const changePostText = (event) => {\r\n        let changedText = event.target.value;\r\n        props.changePostText(changedText);\r\n    }    \r\n\r\n    return(\r\n        <div className={s.posts}>\r\n            <div className={s.addPost}>\r\n                <textarea onChange={changePostText} value={props.writingPostText} placeholder=\" create your new post\" />\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div>\r\n\r\n            {props.posts.map(post => {\r\n                return(\r\n                    <Post key={post.id} post={post.postText} likes={post.likesCount} />\r\n                );\r\n            })}\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PostsTape;","const ADD_POST = 'ADD-POST';\r\nconst CHANGE_POST = 'CHANGE-POST';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, postText: 'Hi there!', likesCount: 10},\r\n    {id: 2, postText: 'It\\'s my new post.', likesCount: 25765},\r\n  ],\r\n  writingPostText: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_POST:\r\n        let newPost = {\r\n          id: 5,\r\n          postText: state.writingPostText,\r\n          likeCount: 0 \r\n      };\r\n    \r\n        state.posts.push(newPost);\r\n        state.writingPostText = '';\r\n        return state;\r\n  \r\n      case CHANGE_POST:\r\n        state.writingPostText = action.text;\r\n        return state;\r\n      \r\n      default: \r\n        return state;\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n      type: ADD_POST\r\n    }\r\n  }\r\n  \r\n  export const changePostActionCreator = (text) => {\r\n    return {\r\n      type: CHANGE_POST,\r\n      text: text\r\n    }\r\n  }\r\n\r\n  export default profileReducer;","import React from 'react';\r\nimport PostsTape from './PostsTape';\r\nimport { addPostActionCreator, changePostActionCreator } from '../../../redux/profileReducer';\r\nimport StoreContext from '../../../StoreContext';\r\n\r\nconst PostsTapeContainer = (props) => {\r\n   \r\n    return(\r\n            <StoreContext.Consumer>\r\n                { (store) => {\r\n                    let state = store.getState();\r\n\r\n                    let addPost = () => {\r\n                        store.dispatch(addPostActionCreator());\r\n                    }\r\n                \r\n                    const changePostText = (text) => {\r\n                        store.dispatch(changePostActionCreator(text));\r\n                    }\r\n\r\n                    return(\r\n                        <PostsTape addPost={addPost} changePostText={changePostText} posts={state.profilePage.posts} writingPostText={state.profilePage.writingPostText} />\r\n                        )\r\n                    }\r\n                }\r\n            </StoreContext.Consumer>\r\n        )   \r\n}\r\n\r\nexport default PostsTapeContainer;","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport PostsTapeContainer from './PostsTape/PostsTapeContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n   \r\n\r\n        return(\r\n            <div>\r\n                <header>\r\n                    <Header />\r\n                </header>\r\n                <main>\r\n                    <PostsTapeContainer />  \r\n                </main>             \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Profile;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst CHANGE_MESSAGE = 'CHANGE-MESSAGE';\r\n\r\nlet initialState = {\r\n  users: [\r\n    {id: 1, name: 'Tom'},\r\n    {id: 2, name: 'Helen'},\r\n    {id: 3, name: 'Sarah'},\r\n    {id: 4, name: 'George'},\r\n  ],\r\n  messages: [\r\n    {id: 1, autor: 'Tom', message: 'Hi! Are you busy today?'},\r\n    {id: 2, autor: 'Me', message: 'Hi! I\\'ve free time in afternoon. What\\'s the matter?'},\r\n    {id: 3, autor: 'Tom', message: 'I want to talk with you.'},\r\n    {id: 4, autor: 'Me', message: 'OK, let\\'s meet at 6 o\\'clock?'},\r\n  ],\r\n  writingMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n      case ADD_MESSAGE:\r\n      let newMessage = {\r\n        id: 5, \r\n        autor: 'Me',\r\n        message: state.writingMessageText\r\n      };\r\n  \r\n      state.messages.push(newMessage);\r\n      state.writingMessageText = '';\r\n      return state;\r\n\r\n      case CHANGE_MESSAGE:\r\n      state.writingMessageText = action.text;\r\n      return state; \r\n      \r\n      default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessageActionCreator = () => {\r\n    return {\r\n      type: ADD_MESSAGE\r\n    }\r\n  }\r\n  \r\nexport const changeMessageActionCreator = (text) => {\r\n    return {\r\n        type: CHANGE_MESSAGE,\r\n        text: text\r\n      }\r\n    }\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserBlock = (props) =>{\r\n\r\n    return(\r\n        <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>\r\n            <div className={s.userBlock}>\r\n                <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n                {props.name}\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default UserBlock;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst MessageBlock = (props) => {\r\n\r\n    return(\r\n        <div className={s.message}>\r\n            <img className={s.ava} src=\"https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png\" alt=\"ava\" />\r\n            <div className={s.messageBlock}>\r\n                <h5 className={s.userName}>{props.autor}</h5>\r\n                <p className={s.messageText}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBlock;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport UserBlock from './UserBlock/UserBlock';\r\nimport MessageBlock from './MessageBlock/MessageBlock';\r\n\r\n\r\nconst Dialogs = (props) => { \r\n\r\n    const onAddMessage = () => {        \r\n        props.addMessage();\r\n    }\r\n\r\n    const onChangeMessage = (event) => {\r\n        let writingText = event.target.value;\r\n        props.changeMessage(writingText);\r\n    }\r\n\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.usersColumn}>\r\n\r\n                {props.users.map(user => <UserBlock key={user.id} id={user.id} name={user.name} />)}\r\n\r\n            </div>\r\n            <div className={s.messagesColumn}>\r\n                <div className={s.addMessage}>\r\n                    <textarea onChange={onChangeMessage} className={s.postField} value={props.writingMessageText} placeholder=\" write your message here\" />\r\n                    <button onClick={onAddMessage}>Send message</button>\r\n                </div>\r\n\r\n                {props.messages.map(mes => <MessageBlock key={mes.id} autor={mes.autor} message={mes.message} />)}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { addMessageActionCreator, changeMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport StoreContext from '../../StoreContext';\r\n\r\n\r\nconst DialogsContainer = (props) => { \r\n\r\n    return( \r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n                 let state = store.getState();\r\n\r\n                 let addMessage = () => {        \r\n                    store.dispatch(addMessageActionCreator());\r\n                }\r\n            \r\n                const changeMessage = (text) => {\r\n                    store.dispatch(changeMessageActionCreator(text));\r\n                }\r\n\r\n                return(\r\n                    <Dialogs addMessage={addMessage} changeMessage={changeMessage} users={state.dialogsPage.users} messages={state.dialogsPage.messages} writingMessageText={state.dialogsPage.writingMessageText} />\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n        )\r\n}\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\n//import s from './News.module.css';\r\n\r\n\r\nclass News extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>News</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\n\r\nclass Settings extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>Settings</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\n//import s from './Music.module.css';\r\n\r\n\r\nclass Music extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>Music</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Music;","import React, { Fragment } from 'react';\r\n\r\nconst Main = () => {\r\n\r\n    return(\r\n        <Fragment>\r\n            <img src=\"http://s808.ru/pictures/czech_switzerland/czech_switzerland_001.jpg\" alt=\"czech nature\" />\r\n        </Fragment>\r\n    )\r\n    \r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport MainHeader from './components/MainHeader/MainHeader';\r\nimport SidebarContainer from './components/Sidebar/SidebarContainer';\r\nimport Profile from './components/Profile/Profile';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport Music from './components/Music/Music';\r\n\r\nimport {Route} from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\n\r\n\r\nfunction App(props) {\r\ndebugger;\r\n  return (\r\n    <div className=\"app\">\r\n        <MainHeader />\r\n      <div className=\"wrapper\">            \r\n          <SidebarContainer />       \r\n        <div className=\"contentBlock\">\r\n\r\n          <Route exact path='/' component={Main} />\r\n\r\n          <Route path='/profile' render={ () => <Profile />} />\r\n\r\n          <Route path='/dialogs' render={ () => <DialogsContainer />} />\r\n\r\n          <Route path='/news' render={ () => <News />} />\r\n          <Route path='/music' render={ () => <Music />} />\r\n          <Route path='/settings' render={ () => <Settings />} />\r\n\r\n        </div> \r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'James', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 2, name: 'Kirk', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 3, name: 'Lars', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n        {id: 4, name: 'Robert', avatarLink: 'https://cdn2.iconfinder.com/data/icons/proxima-2/256/user.png'},\r\n      ],\r\n      menu: [\r\n        {link: '/profile', page: 'Profile'},\r\n        {link: '/dialogs', page: 'Dialogs'},\r\n        {link: '/news', page: 'News'},\r\n        {link: '/music', page: 'Music'},\r\n      ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\n\r\nconst reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from './StoreContext';\r\n\r\n\r\nconst renderAll = (state) => {\r\n\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <BrowserRouter>\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>\r\n        </BrowserRouter>\r\n      </React.StrictMode>,\r\n      document.getElementById('root')\r\n    );\r\n  }\r\n\r\n\r\nrenderAll(store.getState()); //first rendering\r\n//and now we need state and we are getting it by\r\n//calling getState()\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  renderAll(state);\r\n});\r\n//subscribe(renderAll); //\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}